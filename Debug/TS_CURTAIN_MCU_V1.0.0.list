
TS_CURTAIN_MCU_V1.0.0.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000105c  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080011f0  080011f0  00020024  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080011f0  080011f0  00020024  2**0
                  CONTENTS
  4 .ARM          00000000  080011f0  080011f0  00020024  2**0
                  CONTENTS
  5 .preinit_array 00000000  080011f0  080011f0  00020024  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080011f0  080011f0  000111f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080011f4  080011f4  000111f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000024  20000000  080011f8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001c8  20000024  0800121c  00020024  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001ec  0800121c  000201ec  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020024  2**0
                  CONTENTS, READONLY
 12 .comment      000000be  00000000  00000000  00020054  2**0
                  CONTENTS, READONLY
 13 .debug_info   00003a8b  00000000  00000000  00020112  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000fcf  00000000  00000000  00023b9d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000004a8  00000000  00000000  00024b70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000081  00000000  00000000  00025018  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000c739  00000000  00000000  00025099  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00003853  00000000  00000000  000317d2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0003e1f6  00000000  00000000  00035025  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000124c  00000000  00000000  0007321c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005b  00000000  00000000  00074468  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00000370  00000000  00000000  000744c3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000024 	.word	0x20000024
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080011d8 	.word	0x080011d8

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000028 	.word	0x20000028
 80001d0:	080011d8 	.word	0x080011d8

080001d4 <main>:
uint32_t CalculatorTime(uint32_t dwTimeInit, uint32_t dwTimeCurrent);
void LedControl_TimPressRealease(void);
void delay_ms(uint32_t ms);
//--------------------------------------------------------------------------------------------

int main(void) {
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b082      	sub	sp, #8
 80001d8:	af02      	add	r7, sp, #8
	buttonB2.Count = 0;
 80001da:	4b0e      	ldr	r3, [pc, #56]	; (8000214 <main+0x40>)
 80001dc:	2200      	movs	r2, #0
 80001de:	60da      	str	r2, [r3, #12]
	SystemCoreClockUpdate();
 80001e0:	f000 fb7a 	bl	80008d8 <SystemCoreClockUpdate>
	LedBuzz_Init();
 80001e4:	f000 f832 	bl	800024c <LedBuzz_Init>
	TimerInit();
 80001e8:	f000 ff7c 	bl	80010e4 <TimerInit>
	InterruptPA4_Init();
 80001ec:	f000 f860 	bl	80002b0 <InterruptPA4_Init>
	InterruptPB3_Init();
 80001f0:	f000 f8da 	bl	80003a8 <InterruptPB3_Init>
	InterruptPB0_Init();
 80001f4:	f000 f89a 	bl	800032c <InterruptPB0_Init>
	Blinkled_StatusPower(LEDGREEN1_GPIO_PORT, LEDGREEN1_GPIO_PIN, LEDGREEN2_GPIO_PORT, LEDGREEN2_GPIO_PIN, 4);
 80001f8:	2304      	movs	r3, #4
 80001fa:	9300      	str	r3, [sp, #0]
 80001fc:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000200:	4a05      	ldr	r2, [pc, #20]	; (8000218 <main+0x44>)
 8000202:	2101      	movs	r1, #1
 8000204:	4804      	ldr	r0, [pc, #16]	; (8000218 <main+0x44>)
 8000206:	f000 fa23 	bl	8000650 <Blinkled_StatusPower>
	while (1) {
		Toggled_5times();
 800020a:	f000 f9e7 	bl	80005dc <Toggled_5times>

		LedControl_TimPressRealease();
 800020e:	f000 fa59 	bl	80006c4 <LedControl_TimPressRealease>
		Toggled_5times();
 8000212:	e7fa      	b.n	800020a <main+0x36>
 8000214:	20000048 	.word	0x20000048
 8000218:	40020000 	.word	0x40020000

0800021c <delay_ms>:
 * @brief  delay milisecon
 * @param  None
 * @retval None
 */
void delay_ms(uint32_t ms)
{
 800021c:	b580      	push	{r7, lr}
 800021e:	b084      	sub	sp, #16
 8000220:	af00      	add	r7, sp, #0
 8000222:	6078      	str	r0, [r7, #4]

	uint32_t startTime = GetMilSecTick(); //Lưu lại thời điểm hiện tại.
 8000224:	f000 ff80 	bl	8001128 <GetMilSecTick>
 8000228:	60f8      	str	r0, [r7, #12]
	while (CalculatorTime(startTime, GetMilSecTick()) <= ms); //	Đợi cho đến khi hết khoảng time cài đặt
 800022a:	bf00      	nop
 800022c:	f000 ff7c 	bl	8001128 <GetMilSecTick>
 8000230:	4603      	mov	r3, r0
 8000232:	4619      	mov	r1, r3
 8000234:	68f8      	ldr	r0, [r7, #12]
 8000236:	f000 f9b7 	bl	80005a8 <CalculatorTime>
 800023a:	4602      	mov	r2, r0
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	4293      	cmp	r3, r2
 8000240:	d2f4      	bcs.n	800022c <delay_ms+0x10>
}
 8000242:	bf00      	nop
 8000244:	bf00      	nop
 8000246:	3710      	adds	r7, #16
 8000248:	46bd      	mov	sp, r7
 800024a:	bd80      	pop	{r7, pc}

0800024c <LedBuzz_Init>:
 * @brief  Init Buuzzer and Led
 * @param  None
 * @retval None
 */
static void LedBuzz_Init(void)
{
 800024c:	b580      	push	{r7, lr}
 800024e:	b082      	sub	sp, #8
 8000250:	af00      	add	r7, sp, #0
	//Declare type variable GPIO Struct------------------------------------------------
	GPIO_InitTypeDef GPIO_InitStructure;

	RCC_AHB1PeriphClockCmd(
 8000252:	2101      	movs	r1, #1
 8000254:	2007      	movs	r0, #7
 8000256:	f000 fe77 	bl	8000f48 <RCC_AHB1PeriphClockCmd>
			RCC_AHB1Periph_GPIOA | RCC_AHB1Periph_GPIOB | RCC_AHB1Periph_GPIOC,
			ENABLE);

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 800025a:	2301      	movs	r3, #1
 800025c:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 800025e:	2302      	movs	r3, #2
 8000260:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000262:	2300      	movs	r3, #0
 8000264:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 8000266:	2302      	movs	r3, #2
 8000268:	71fb      	strb	r3, [r7, #7]

	//	Port A
	GPIO_InitStructure.GPIO_Pin = LEDGREEN1_GPIO_PIN | LEDGREEN2_GPIO_PIN| LEDRED1_GPIO_PIN | LEDBLUE1_GPIO_PIN | LEDBLUE2_GPIO_PIN;
 800026a:	f640 430b 	movw	r3, #3083	; 0xc0b
 800026e:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 8000270:	463b      	mov	r3, r7
 8000272:	4619      	mov	r1, r3
 8000274:	480b      	ldr	r0, [pc, #44]	; (80002a4 <LedBuzz_Init+0x58>)
 8000276:	f000 fcf9 	bl	8000c6c <GPIO_Init>

	//	Port B
	GPIO_InitStructure.GPIO_Pin = LEDRED2_GPIO_PIN;
 800027a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800027e:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOB, &GPIO_InitStructure);
 8000280:	463b      	mov	r3, r7
 8000282:	4619      	mov	r1, r3
 8000284:	4808      	ldr	r0, [pc, #32]	; (80002a8 <LedBuzz_Init+0x5c>)
 8000286:	f000 fcf1 	bl	8000c6c <GPIO_Init>

	//  Port C
	GPIO_InitStructure.GPIO_Pin = BUZZER_GPIO_PIN;
 800028a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800028e:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOC, &GPIO_InitStructure);
 8000290:	463b      	mov	r3, r7
 8000292:	4619      	mov	r1, r3
 8000294:	4805      	ldr	r0, [pc, #20]	; (80002ac <LedBuzz_Init+0x60>)
 8000296:	f000 fce9 	bl	8000c6c <GPIO_Init>
}
 800029a:	bf00      	nop
 800029c:	3708      	adds	r7, #8
 800029e:	46bd      	mov	sp, r7
 80002a0:	bd80      	pop	{r7, pc}
 80002a2:	bf00      	nop
 80002a4:	40020000 	.word	0x40020000
 80002a8:	40020400 	.word	0x40020400
 80002ac:	40020800 	.word	0x40020800

080002b0 <InterruptPA4_Init>:
 * @func   InterruptPA4_Init
 * @brief  Init Interrupt
 * @param  None
 * @retval None
 */
static void InterruptPA4_Init(void) {
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b086      	sub	sp, #24
 80002b4:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	EXTI_InitTypeDef EXTI_InitStructure;
	NVIC_InitTypeDef NVIC_InitStructure;

// Enable Clock Port A;
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
 80002b6:	2101      	movs	r1, #1
 80002b8:	2001      	movs	r0, #1
 80002ba:	f000 fe45 	bl	8000f48 <RCC_AHB1PeriphClockCmd>

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 80002be:	2300      	movs	r3, #0
 80002c0:	753b      	strb	r3, [r7, #20]
	GPIO_InitStructure.GPIO_Pin = BUTTONB3_GPIO_PIN;
 80002c2:	2310      	movs	r3, #16
 80002c4:	613b      	str	r3, [r7, #16]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80002c6:	2302      	movs	r3, #2
 80002c8:	757b      	strb	r3, [r7, #21]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 80002ca:	2301      	movs	r3, #1
 80002cc:	75fb      	strb	r3, [r7, #23]

	GPIO_Init(BUTTONB3_GPIO_PORT, &GPIO_InitStructure);
 80002ce:	f107 0310 	add.w	r3, r7, #16
 80002d2:	4619      	mov	r1, r3
 80002d4:	4814      	ldr	r0, [pc, #80]	; (8000328 <InterruptPA4_Init+0x78>)
 80002d6:	f000 fcc9 	bl	8000c6c <GPIO_Init>

//  Enable Clock Syscfg, Connect EXTI Line 4 to PA4 pin

	RCC_APB2PeriphClockCmd(SYSFG_Clock, ENABLE);
 80002da:	2101      	movs	r1, #1
 80002dc:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 80002e0:	f000 fe52 	bl	8000f88 <RCC_APB2PeriphClockCmd>
	SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOA, EXTI_PinSource4);
 80002e4:	2104      	movs	r1, #4
 80002e6:	2000      	movs	r0, #0
 80002e8:	f000 fe6e 	bl	8000fc8 <SYSCFG_EXTILineConfig>

//	Configuration Interrupt

	EXTI_InitStructure.EXTI_Line = EXTI_Line4;
 80002ec:	2310      	movs	r3, #16
 80002ee:	60bb      	str	r3, [r7, #8]
	EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
 80002f0:	2300      	movs	r3, #0
 80002f2:	733b      	strb	r3, [r7, #12]
	EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising_Falling;
 80002f4:	2310      	movs	r3, #16
 80002f6:	737b      	strb	r3, [r7, #13]
	EXTI_InitStructure.EXTI_LineCmd = ENABLE;
 80002f8:	2301      	movs	r3, #1
 80002fa:	73bb      	strb	r3, [r7, #14]
	EXTI_Init(&EXTI_InitStructure);
 80002fc:	f107 0308 	add.w	r3, r7, #8
 8000300:	4618      	mov	r0, r3
 8000302:	f000 fc17 	bl	8000b34 <EXTI_Init>

// Configuration NVIC

	NVIC_InitStructure.NVIC_IRQChannel = EXTI4_IRQn;
 8000306:	230a      	movs	r3, #10
 8000308:	713b      	strb	r3, [r7, #4]
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 3;
 800030a:	2303      	movs	r3, #3
 800030c:	717b      	strb	r3, [r7, #5]
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x03;
 800030e:	2303      	movs	r3, #3
 8000310:	71bb      	strb	r3, [r7, #6]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 8000312:	2301      	movs	r3, #1
 8000314:	71fb      	strb	r3, [r7, #7]

	NVIC_Init(&NVIC_InitStructure);
 8000316:	1d3b      	adds	r3, r7, #4
 8000318:	4618      	mov	r0, r3
 800031a:	f000 fba9 	bl	8000a70 <NVIC_Init>
}
 800031e:	bf00      	nop
 8000320:	3718      	adds	r7, #24
 8000322:	46bd      	mov	sp, r7
 8000324:	bd80      	pop	{r7, pc}
 8000326:	bf00      	nop
 8000328:	40020000 	.word	0x40020000

0800032c <InterruptPB0_Init>:
 * @func   InterruptPB0_Init
 * @brief  Init Interrupt
 * @param  None
 * @retval None
 */
static void InterruptPB0_Init(void) {
 800032c:	b580      	push	{r7, lr}
 800032e:	b086      	sub	sp, #24
 8000330:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	EXTI_InitTypeDef EXTI_InitStructure;
	NVIC_InitTypeDef NVIC_InitStructure;

// Enable Clock Port B;
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);
 8000332:	2101      	movs	r1, #1
 8000334:	2002      	movs	r0, #2
 8000336:	f000 fe07 	bl	8000f48 <RCC_AHB1PeriphClockCmd>

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 800033a:	2300      	movs	r3, #0
 800033c:	753b      	strb	r3, [r7, #20]
	GPIO_InitStructure.GPIO_Pin = BUTTONB4_GPIO_PIN;
 800033e:	2301      	movs	r3, #1
 8000340:	613b      	str	r3, [r7, #16]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000342:	2302      	movs	r3, #2
 8000344:	757b      	strb	r3, [r7, #21]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 8000346:	2301      	movs	r3, #1
 8000348:	75fb      	strb	r3, [r7, #23]

	GPIO_Init(BUTTONB4_GPIO_PORT, &GPIO_InitStructure);
 800034a:	f107 0310 	add.w	r3, r7, #16
 800034e:	4619      	mov	r1, r3
 8000350:	4814      	ldr	r0, [pc, #80]	; (80003a4 <InterruptPB0_Init+0x78>)
 8000352:	f000 fc8b 	bl	8000c6c <GPIO_Init>

//  Enable Clock Syscfg, Connect EXTI Line 0 to PB0 pin

	RCC_APB2PeriphClockCmd(SYSFG_Clock, ENABLE);
 8000356:	2101      	movs	r1, #1
 8000358:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 800035c:	f000 fe14 	bl	8000f88 <RCC_APB2PeriphClockCmd>

	SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOB, EXTI_PinSource0);
 8000360:	2100      	movs	r1, #0
 8000362:	2001      	movs	r0, #1
 8000364:	f000 fe30 	bl	8000fc8 <SYSCFG_EXTILineConfig>

//	Configuration Interrupt

	EXTI_InitStructure.EXTI_Line = EXTI_Line0;
 8000368:	2301      	movs	r3, #1
 800036a:	60bb      	str	r3, [r7, #8]
	EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
 800036c:	2300      	movs	r3, #0
 800036e:	733b      	strb	r3, [r7, #12]
	EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising_Falling;
 8000370:	2310      	movs	r3, #16
 8000372:	737b      	strb	r3, [r7, #13]
	EXTI_InitStructure.EXTI_LineCmd = ENABLE;
 8000374:	2301      	movs	r3, #1
 8000376:	73bb      	strb	r3, [r7, #14]
	EXTI_Init(&EXTI_InitStructure);
 8000378:	f107 0308 	add.w	r3, r7, #8
 800037c:	4618      	mov	r0, r3
 800037e:	f000 fbd9 	bl	8000b34 <EXTI_Init>

// Configuration NVIC

	NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn;
 8000382:	2306      	movs	r3, #6
 8000384:	713b      	strb	r3, [r7, #4]
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
 8000386:	2302      	movs	r3, #2
 8000388:	717b      	strb	r3, [r7, #5]
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x02;
 800038a:	2302      	movs	r3, #2
 800038c:	71bb      	strb	r3, [r7, #6]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 800038e:	2301      	movs	r3, #1
 8000390:	71fb      	strb	r3, [r7, #7]

	NVIC_Init(&NVIC_InitStructure);
 8000392:	1d3b      	adds	r3, r7, #4
 8000394:	4618      	mov	r0, r3
 8000396:	f000 fb6b 	bl	8000a70 <NVIC_Init>
}
 800039a:	bf00      	nop
 800039c:	3718      	adds	r7, #24
 800039e:	46bd      	mov	sp, r7
 80003a0:	bd80      	pop	{r7, pc}
 80003a2:	bf00      	nop
 80003a4:	40020400 	.word	0x40020400

080003a8 <InterruptPB3_Init>:
 * @func   InterruptPB3_Init
 * @brief  Init Interrupt
 * @param  None
 * @retval None
 */
static void InterruptPB3_Init(void) {
 80003a8:	b580      	push	{r7, lr}
 80003aa:	b086      	sub	sp, #24
 80003ac:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	EXTI_InitTypeDef EXTI_InitStructure;
	NVIC_InitTypeDef NVIC_InitStructure;

// Enable Clock Port C;
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);
 80003ae:	2101      	movs	r1, #1
 80003b0:	2002      	movs	r0, #2
 80003b2:	f000 fdc9 	bl	8000f48 <RCC_AHB1PeriphClockCmd>

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 80003b6:	2300      	movs	r3, #0
 80003b8:	753b      	strb	r3, [r7, #20]
	GPIO_InitStructure.GPIO_Pin = BUTTONB2_GPIO_PIN;
 80003ba:	2308      	movs	r3, #8
 80003bc:	613b      	str	r3, [r7, #16]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80003be:	2302      	movs	r3, #2
 80003c0:	757b      	strb	r3, [r7, #21]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 80003c2:	2301      	movs	r3, #1
 80003c4:	75fb      	strb	r3, [r7, #23]

	GPIO_Init(BUTTONB2_GPIO_PORT, &GPIO_InitStructure);
 80003c6:	f107 0310 	add.w	r3, r7, #16
 80003ca:	4619      	mov	r1, r3
 80003cc:	4814      	ldr	r0, [pc, #80]	; (8000420 <InterruptPB3_Init+0x78>)
 80003ce:	f000 fc4d 	bl	8000c6c <GPIO_Init>

//  Enable Clock Syscfg, Connect EXTI Line 3 to PB3 pin

	RCC_APB2PeriphClockCmd(SYSFG_Clock, ENABLE);
 80003d2:	2101      	movs	r1, #1
 80003d4:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 80003d8:	f000 fdd6 	bl	8000f88 <RCC_APB2PeriphClockCmd>
	SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOB, EXTI_PinSource3);
 80003dc:	2103      	movs	r1, #3
 80003de:	2001      	movs	r0, #1
 80003e0:	f000 fdf2 	bl	8000fc8 <SYSCFG_EXTILineConfig>

//	Configuration Interrupt

	EXTI_InitStructure.EXTI_Line = EXTI_Line3;
 80003e4:	2308      	movs	r3, #8
 80003e6:	60bb      	str	r3, [r7, #8]

	EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
 80003e8:	2300      	movs	r3, #0
 80003ea:	733b      	strb	r3, [r7, #12]
	EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising_Falling;
 80003ec:	2310      	movs	r3, #16
 80003ee:	737b      	strb	r3, [r7, #13]
	EXTI_InitStructure.EXTI_LineCmd = ENABLE;
 80003f0:	2301      	movs	r3, #1
 80003f2:	73bb      	strb	r3, [r7, #14]
	EXTI_Init(&EXTI_InitStructure);
 80003f4:	f107 0308 	add.w	r3, r7, #8
 80003f8:	4618      	mov	r0, r3
 80003fa:	f000 fb9b 	bl	8000b34 <EXTI_Init>

// Configuration NVIC

	NVIC_InitStructure.NVIC_IRQChannel = EXTI3_IRQn;
 80003fe:	2309      	movs	r3, #9
 8000400:	713b      	strb	r3, [r7, #4]
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
 8000402:	2301      	movs	r3, #1
 8000404:	717b      	strb	r3, [r7, #5]
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x01;
 8000406:	2301      	movs	r3, #1
 8000408:	71bb      	strb	r3, [r7, #6]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 800040a:	2301      	movs	r3, #1
 800040c:	71fb      	strb	r3, [r7, #7]

	NVIC_Init(&NVIC_InitStructure);
 800040e:	1d3b      	adds	r3, r7, #4
 8000410:	4618      	mov	r0, r3
 8000412:	f000 fb2d 	bl	8000a70 <NVIC_Init>
}
 8000416:	bf00      	nop
 8000418:	3718      	adds	r7, #24
 800041a:	46bd      	mov	sp, r7
 800041c:	bd80      	pop	{r7, pc}
 800041e:	bf00      	nop
 8000420:	40020400 	.word	0x40020400

08000424 <EXTI4_IRQHandler>:
 * @func   EXTI4_IRQHandler
 * @brief  Interrupt line 4
 * @param  None
 * @retval None
 */
void EXTI4_IRQHandler(void) {
 8000424:	b580      	push	{r7, lr}
 8000426:	af00      	add	r7, sp, #0
	if (EXTI_GetFlagStatus(EXTI_Line4) == SET) {
 8000428:	2010      	movs	r0, #16
 800042a:	f000 fbf5 	bl	8000c18 <EXTI_GetFlagStatus>
 800042e:	4603      	mov	r3, r0
 8000430:	2b01      	cmp	r3, #1
 8000432:	d112      	bne.n	800045a <EXTI4_IRQHandler+0x36>
		if (GPIO_ReadInputDataBit(BUTTONB3_GPIO_PORT,BUTTONB3_GPIO_PIN)== GPIO_PIN_RESET) {
 8000434:	2110      	movs	r1, #16
 8000436:	480b      	ldr	r0, [pc, #44]	; (8000464 <EXTI4_IRQHandler+0x40>)
 8000438:	f000 fca6 	bl	8000d88 <GPIO_ReadInputDataBit>
 800043c:	4603      	mov	r3, r0
 800043e:	2b00      	cmp	r3, #0
 8000440:	d105      	bne.n	800044e <EXTI4_IRQHandler+0x2a>
			startTimerB3 = GetMilSecTick();	// Lưu thời gian nhấn nút
 8000442:	f000 fe71 	bl	8001128 <GetMilSecTick>
 8000446:	4603      	mov	r3, r0
 8000448:	4a07      	ldr	r2, [pc, #28]	; (8000468 <EXTI4_IRQHandler+0x44>)
 800044a:	6013      	str	r3, [r2, #0]
 800044c:	e005      	b.n	800045a <EXTI4_IRQHandler+0x36>
		}
		else
		{
			Status++;						// Khi nhả nút thì biến tăng
 800044e:	4b07      	ldr	r3, [pc, #28]	; (800046c <EXTI4_IRQHandler+0x48>)
 8000450:	781b      	ldrb	r3, [r3, #0]
 8000452:	3301      	adds	r3, #1
 8000454:	b2da      	uxtb	r2, r3
 8000456:	4b05      	ldr	r3, [pc, #20]	; (800046c <EXTI4_IRQHandler+0x48>)
 8000458:	701a      	strb	r2, [r3, #0]
		}
	}
	//xóa cờ ngắt sau khi thực hiện xong chương trình ngắt.
	EXTI_ClearITPendingBit(EXTI_Line4);
 800045a:	2010      	movs	r0, #16
 800045c:	f000 fbf6 	bl	8000c4c <EXTI_ClearITPendingBit>
}
 8000460:	bf00      	nop
 8000462:	bd80      	pop	{r7, pc}
 8000464:	40020000 	.word	0x40020000
 8000468:	20000044 	.word	0x20000044
 800046c:	20000040 	.word	0x20000040

08000470 <EXTI3_IRQHandler>:
 * @func   EXTI3_IRQHandler
 * @brief  Interrupt line 3
 * @param  None
 * @retval None
 */
void EXTI3_IRQHandler(void) {
 8000470:	b580      	push	{r7, lr}
 8000472:	af00      	add	r7, sp, #0
	if (EXTI_GetFlagStatus(EXTI_Line3) == SET) {
 8000474:	2008      	movs	r0, #8
 8000476:	f000 fbcf 	bl	8000c18 <EXTI_GetFlagStatus>
 800047a:	4603      	mov	r3, r0
 800047c:	2b01      	cmp	r3, #1
 800047e:	d11c      	bne.n	80004ba <EXTI3_IRQHandler+0x4a>

		if (GPIO_ReadInputDataBit(BUTTONB2_GPIO_PORT,BUTTONB2_GPIO_PIN)== GPIO_PIN_RESET) {
 8000480:	2108      	movs	r1, #8
 8000482:	4810      	ldr	r0, [pc, #64]	; (80004c4 <EXTI3_IRQHandler+0x54>)
 8000484:	f000 fc80 	bl	8000d88 <GPIO_ReadInputDataBit>
 8000488:	4603      	mov	r3, r0
 800048a:	2b00      	cmp	r3, #0
 800048c:	d10d      	bne.n	80004aa <EXTI3_IRQHandler+0x3a>
			buttonB2.State = BUTTON_PRESSED;
 800048e:	4b0e      	ldr	r3, [pc, #56]	; (80004c8 <EXTI3_IRQHandler+0x58>)
 8000490:	2201      	movs	r2, #1
 8000492:	701a      	strb	r2, [r3, #0]
			buttonB2.timePress = GetMilSecTick();
 8000494:	f000 fe48 	bl	8001128 <GetMilSecTick>
 8000498:	4603      	mov	r3, r0
 800049a:	4a0b      	ldr	r2, [pc, #44]	; (80004c8 <EXTI3_IRQHandler+0x58>)
 800049c:	6053      	str	r3, [r2, #4]
			buttonB2.Count++;
 800049e:	4b0a      	ldr	r3, [pc, #40]	; (80004c8 <EXTI3_IRQHandler+0x58>)
 80004a0:	68db      	ldr	r3, [r3, #12]
 80004a2:	3301      	adds	r3, #1
 80004a4:	4a08      	ldr	r2, [pc, #32]	; (80004c8 <EXTI3_IRQHandler+0x58>)
 80004a6:	60d3      	str	r3, [r2, #12]
 80004a8:	e007      	b.n	80004ba <EXTI3_IRQHandler+0x4a>
		} else {

			buttonB2.timeReleased = GetMilSecTick();
 80004aa:	f000 fe3d 	bl	8001128 <GetMilSecTick>
 80004ae:	4603      	mov	r3, r0
 80004b0:	4a05      	ldr	r2, [pc, #20]	; (80004c8 <EXTI3_IRQHandler+0x58>)
 80004b2:	6093      	str	r3, [r2, #8]
			buttonB2.State = BUTTON_RELEASED;
 80004b4:	4b04      	ldr	r3, [pc, #16]	; (80004c8 <EXTI3_IRQHandler+0x58>)
 80004b6:	2202      	movs	r2, #2
 80004b8:	701a      	strb	r2, [r3, #0]
		}
	}
	//xóa cờ ngắt sau khi thực hiện xong chương trình ngắt.
	EXTI_ClearITPendingBit(EXTI_Line3);
 80004ba:	2008      	movs	r0, #8
 80004bc:	f000 fbc6 	bl	8000c4c <EXTI_ClearITPendingBit>
}
 80004c0:	bf00      	nop
 80004c2:	bd80      	pop	{r7, pc}
 80004c4:	40020400 	.word	0x40020400
 80004c8:	20000048 	.word	0x20000048

080004cc <EXTI0_IRQHandler>:
 * @brief  Interrupt line 0
 * @param  None
 * @retval None
 */
void EXTI0_IRQHandler(void)
{
 80004cc:	b580      	push	{r7, lr}
 80004ce:	af00      	add	r7, sp, #0
	if (EXTI_GetFlagStatus(EXTI_Line0) == SET)
 80004d0:	2001      	movs	r0, #1
 80004d2:	f000 fba1 	bl	8000c18 <EXTI_GetFlagStatus>
 80004d6:	4603      	mov	r3, r0
 80004d8:	2b01      	cmp	r3, #1
 80004da:	d11c      	bne.n	8000516 <EXTI0_IRQHandler+0x4a>
	{
		if (GPIO_ReadInputDataBit(BUTTONB4_GPIO_PORT,BUTTONB4_GPIO_PIN)== GPIO_PIN_RESET)
 80004dc:	2101      	movs	r1, #1
 80004de:	4810      	ldr	r0, [pc, #64]	; (8000520 <EXTI0_IRQHandler+0x54>)
 80004e0:	f000 fc52 	bl	8000d88 <GPIO_ReadInputDataBit>
 80004e4:	4603      	mov	r3, r0
 80004e6:	2b00      	cmp	r3, #0
 80004e8:	d10d      	bne.n	8000506 <EXTI0_IRQHandler+0x3a>
		{
			buttonB4.State = BUTTON_PRESSED;
 80004ea:	4b0e      	ldr	r3, [pc, #56]	; (8000524 <EXTI0_IRQHandler+0x58>)
 80004ec:	2201      	movs	r2, #1
 80004ee:	701a      	strb	r2, [r3, #0]
			buttonB4.timePress = GetMilSecTick();
 80004f0:	f000 fe1a 	bl	8001128 <GetMilSecTick>
 80004f4:	4603      	mov	r3, r0
 80004f6:	4a0b      	ldr	r2, [pc, #44]	; (8000524 <EXTI0_IRQHandler+0x58>)
 80004f8:	6053      	str	r3, [r2, #4]
			buttonB4.Count++;
 80004fa:	4b0a      	ldr	r3, [pc, #40]	; (8000524 <EXTI0_IRQHandler+0x58>)
 80004fc:	68db      	ldr	r3, [r3, #12]
 80004fe:	3301      	adds	r3, #1
 8000500:	4a08      	ldr	r2, [pc, #32]	; (8000524 <EXTI0_IRQHandler+0x58>)
 8000502:	60d3      	str	r3, [r2, #12]
 8000504:	e007      	b.n	8000516 <EXTI0_IRQHandler+0x4a>
		} else
		{
			buttonB4.timeReleased = GetMilSecTick();
 8000506:	f000 fe0f 	bl	8001128 <GetMilSecTick>
 800050a:	4603      	mov	r3, r0
 800050c:	4a05      	ldr	r2, [pc, #20]	; (8000524 <EXTI0_IRQHandler+0x58>)
 800050e:	6093      	str	r3, [r2, #8]
			buttonB4.State = BUTTON_RELEASED;
 8000510:	4b04      	ldr	r3, [pc, #16]	; (8000524 <EXTI0_IRQHandler+0x58>)
 8000512:	2202      	movs	r2, #2
 8000514:	701a      	strb	r2, [r3, #0]
		}
	}
	//xóa cờ ngắt sau khi thực hiện xong chương trình ngắt.
	EXTI_ClearITPendingBit(EXTI_Line0);
 8000516:	2001      	movs	r0, #1
 8000518:	f000 fb98 	bl	8000c4c <EXTI_ClearITPendingBit>
}
 800051c:	bf00      	nop
 800051e:	bd80      	pop	{r7, pc}
 8000520:	40020400 	.word	0x40020400
 8000524:	20000058 	.word	0x20000058

08000528 <LedControl_SetStatus>:
 * @brief  set status LED
 * @param  None
 * @retval None
 */
static void LedControl_SetStatus(GPIO_TypeDef *GPIOx, uint16_t GPIO_PIN, uint8_t Status)
{
 8000528:	b480      	push	{r7}
 800052a:	b083      	sub	sp, #12
 800052c:	af00      	add	r7, sp, #0
 800052e:	6078      	str	r0, [r7, #4]
 8000530:	460b      	mov	r3, r1
 8000532:	807b      	strh	r3, [r7, #2]
 8000534:	4613      	mov	r3, r2
 8000536:	707b      	strb	r3, [r7, #1]
	// SET bit in BSRR Registers

	if (Status == GPIO_PIN_SET)
 8000538:	787b      	ldrb	r3, [r7, #1]
 800053a:	2b01      	cmp	r3, #1
 800053c:	d102      	bne.n	8000544 <LedControl_SetStatus+0x1c>
	{
		GPIOx->BSRRL = GPIO_PIN;
 800053e:	687b      	ldr	r3, [r7, #4]
 8000540:	887a      	ldrh	r2, [r7, #2]
 8000542:	831a      	strh	r2, [r3, #24]
	}
	if (Status == GPIO_PIN_RESET)
 8000544:	787b      	ldrb	r3, [r7, #1]
 8000546:	2b00      	cmp	r3, #0
 8000548:	d102      	bne.n	8000550 <LedControl_SetStatus+0x28>
	{
		GPIOx->BSRRH = GPIO_PIN;
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	887a      	ldrh	r2, [r7, #2]
 800054e:	835a      	strh	r2, [r3, #26]
	}
}
 8000550:	bf00      	nop
 8000552:	370c      	adds	r7, #12
 8000554:	46bd      	mov	sp, r7
 8000556:	f85d 7b04 	ldr.w	r7, [sp], #4
 800055a:	4770      	bx	lr

0800055c <BuzzerControl_SetBeep>:
 * @brief  set status buzzer
 * @param  None
 * @retval None
 */
static void BuzzerControl_SetBeep(GPIO_TypeDef *GPIOx, uint16_t GPIO_PIN, uint32_t num)
{
 800055c:	b580      	push	{r7, lr}
 800055e:	b086      	sub	sp, #24
 8000560:	af00      	add	r7, sp, #0
 8000562:	60f8      	str	r0, [r7, #12]
 8000564:	460b      	mov	r3, r1
 8000566:	607a      	str	r2, [r7, #4]
 8000568:	817b      	strh	r3, [r7, #10]
	for (uint32_t i = 0; i < num; i++)
 800056a:	2300      	movs	r3, #0
 800056c:	617b      	str	r3, [r7, #20]
 800056e:	e012      	b.n	8000596 <BuzzerControl_SetBeep+0x3a>
	{
		GPIO_SetBits(GPIOx, GPIO_PIN);
 8000570:	897b      	ldrh	r3, [r7, #10]
 8000572:	4619      	mov	r1, r3
 8000574:	68f8      	ldr	r0, [r7, #12]
 8000576:	f000 fc21 	bl	8000dbc <GPIO_SetBits>
		delay_ms(200);
 800057a:	20c8      	movs	r0, #200	; 0xc8
 800057c:	f7ff fe4e 	bl	800021c <delay_ms>
		GPIO_ResetBits(GPIOx, GPIO_PIN);
 8000580:	897b      	ldrh	r3, [r7, #10]
 8000582:	4619      	mov	r1, r3
 8000584:	68f8      	ldr	r0, [r7, #12]
 8000586:	f000 fc28 	bl	8000dda <GPIO_ResetBits>
		delay_ms(200);
 800058a:	20c8      	movs	r0, #200	; 0xc8
 800058c:	f7ff fe46 	bl	800021c <delay_ms>
	for (uint32_t i = 0; i < num; i++)
 8000590:	697b      	ldr	r3, [r7, #20]
 8000592:	3301      	adds	r3, #1
 8000594:	617b      	str	r3, [r7, #20]
 8000596:	697a      	ldr	r2, [r7, #20]
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	429a      	cmp	r2, r3
 800059c:	d3e8      	bcc.n	8000570 <BuzzerControl_SetBeep+0x14>
	}
}
 800059e:	bf00      	nop
 80005a0:	bf00      	nop
 80005a2:	3718      	adds	r7, #24
 80005a4:	46bd      	mov	sp, r7
 80005a6:	bd80      	pop	{r7, pc}

080005a8 <CalculatorTime>:
 * @brief  Caculator time button
 * @param  None
 * @retval None
 */
uint32_t CalculatorTime(uint32_t dwTimeInit, uint32_t dwTimeCurrent)
{
 80005a8:	b480      	push	{r7}
 80005aa:	b085      	sub	sp, #20
 80005ac:	af00      	add	r7, sp, #0
 80005ae:	6078      	str	r0, [r7, #4]
 80005b0:	6039      	str	r1, [r7, #0]
	uint32_t dwTimeTotal;
	if (dwTimeCurrent >= dwTimeInit) {
 80005b2:	683a      	ldr	r2, [r7, #0]
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	429a      	cmp	r2, r3
 80005b8:	d304      	bcc.n	80005c4 <CalculatorTime+0x1c>
		dwTimeTotal = dwTimeCurrent - dwTimeInit;
 80005ba:	683a      	ldr	r2, [r7, #0]
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	1ad3      	subs	r3, r2, r3
 80005c0:	60fb      	str	r3, [r7, #12]
 80005c2:	e004      	b.n	80005ce <CalculatorTime+0x26>
	} else {
		dwTimeTotal = 0xFFFFFFFFU + dwTimeCurrent - dwTimeInit;
 80005c4:	683a      	ldr	r2, [r7, #0]
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	1ad3      	subs	r3, r2, r3
 80005ca:	3b01      	subs	r3, #1
 80005cc:	60fb      	str	r3, [r7, #12]
	}
	return dwTimeTotal;
 80005ce:	68fb      	ldr	r3, [r7, #12]
}
 80005d0:	4618      	mov	r0, r3
 80005d2:	3714      	adds	r7, #20
 80005d4:	46bd      	mov	sp, r7
 80005d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005da:	4770      	bx	lr

080005dc <Toggled_5times>:
 * @brief  Toggle led number times
 * @param  None
 * @retval None
 */
static void Toggled_5times(void)
{
 80005dc:	b590      	push	{r4, r7, lr}
 80005de:	b083      	sub	sp, #12
 80005e0:	af02      	add	r7, sp, #8
	if (Status == 5)
 80005e2:	4b17      	ldr	r3, [pc, #92]	; (8000640 <Toggled_5times+0x64>)
 80005e4:	781b      	ldrb	r3, [r3, #0]
 80005e6:	2b05      	cmp	r3, #5
 80005e8:	d115      	bne.n	8000616 <Toggled_5times+0x3a>
	{
		delay_ms(200);
 80005ea:	20c8      	movs	r0, #200	; 0xc8
 80005ec:	f7ff fe16 	bl	800021c <delay_ms>
		Blinkled_StatusPower(LEDGREEN1_GPIO_PORT, LEDGREEN1_GPIO_PIN, LEDGREEN2_GPIO_PORT, LEDGREEN2_GPIO_PIN, 5);
 80005f0:	2305      	movs	r3, #5
 80005f2:	9300      	str	r3, [sp, #0]
 80005f4:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80005f8:	4a12      	ldr	r2, [pc, #72]	; (8000644 <Toggled_5times+0x68>)
 80005fa:	2101      	movs	r1, #1
 80005fc:	4811      	ldr	r0, [pc, #68]	; (8000644 <Toggled_5times+0x68>)
 80005fe:	f000 f827 	bl	8000650 <Blinkled_StatusPower>
		BuzzerControl_SetBeep(BUZZER_GPIO_PORT, BUZZER_GPIO_PIN, 3);
 8000602:	2203      	movs	r2, #3
 8000604:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000608:	480f      	ldr	r0, [pc, #60]	; (8000648 <Toggled_5times+0x6c>)
 800060a:	f7ff ffa7 	bl	800055c <BuzzerControl_SetBeep>
		Status = 0;
 800060e:	4b0c      	ldr	r3, [pc, #48]	; (8000640 <Toggled_5times+0x64>)
 8000610:	2200      	movs	r2, #0
 8000612:	701a      	strb	r2, [r3, #0]
		if(CalculatorTime(startTimerB3, GetMilSecTick()) > 500) // Kiểm tra khoảng thời gian giữa các lần nhấn nút
		{
			Status = 0;
		}
	}
}
 8000614:	e00f      	b.n	8000636 <Toggled_5times+0x5a>
		if(CalculatorTime(startTimerB3, GetMilSecTick()) > 500) // Kiểm tra khoảng thời gian giữa các lần nhấn nút
 8000616:	4b0d      	ldr	r3, [pc, #52]	; (800064c <Toggled_5times+0x70>)
 8000618:	681c      	ldr	r4, [r3, #0]
 800061a:	f000 fd85 	bl	8001128 <GetMilSecTick>
 800061e:	4603      	mov	r3, r0
 8000620:	4619      	mov	r1, r3
 8000622:	4620      	mov	r0, r4
 8000624:	f7ff ffc0 	bl	80005a8 <CalculatorTime>
 8000628:	4603      	mov	r3, r0
 800062a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800062e:	d902      	bls.n	8000636 <Toggled_5times+0x5a>
			Status = 0;
 8000630:	4b03      	ldr	r3, [pc, #12]	; (8000640 <Toggled_5times+0x64>)
 8000632:	2200      	movs	r2, #0
 8000634:	701a      	strb	r2, [r3, #0]
}
 8000636:	bf00      	nop
 8000638:	3704      	adds	r7, #4
 800063a:	46bd      	mov	sp, r7
 800063c:	bd90      	pop	{r4, r7, pc}
 800063e:	bf00      	nop
 8000640:	20000040 	.word	0x20000040
 8000644:	40020000 	.word	0x40020000
 8000648:	40020800 	.word	0x40020800
 800064c:	20000044 	.word	0x20000044

08000650 <Blinkled_StatusPower>:
 * @brief  Led blink
 * @param  None
 * @retval None
 */
static void Blinkled_StatusPower(GPIO_TypeDef *GPIOx1, uint16_t GPIO_PIN_ID1, GPIO_TypeDef *GPIOx2, uint16_t GPIO_PIN_ID2, uint32_t num)
{
 8000650:	b580      	push	{r7, lr}
 8000652:	b086      	sub	sp, #24
 8000654:	af00      	add	r7, sp, #0
 8000656:	60f8      	str	r0, [r7, #12]
 8000658:	607a      	str	r2, [r7, #4]
 800065a:	461a      	mov	r2, r3
 800065c:	460b      	mov	r3, r1
 800065e:	817b      	strh	r3, [r7, #10]
 8000660:	4613      	mov	r3, r2
 8000662:	813b      	strh	r3, [r7, #8]
	for (uint32_t i = 0; i < num; i++)
 8000664:	2300      	movs	r3, #0
 8000666:	617b      	str	r3, [r7, #20]
 8000668:	e022      	b.n	80006b0 <Blinkled_StatusPower+0x60>
	{
		LedControl_SetStatus(GPIOx1, GPIO_PIN_ID1, GPIO_PIN_HIGH);
 800066a:	897b      	ldrh	r3, [r7, #10]
 800066c:	2201      	movs	r2, #1
 800066e:	4619      	mov	r1, r3
 8000670:	68f8      	ldr	r0, [r7, #12]
 8000672:	f7ff ff59 	bl	8000528 <LedControl_SetStatus>
		LedControl_SetStatus(GPIOx2, GPIO_PIN_ID2, GPIO_PIN_HIGH);
 8000676:	893b      	ldrh	r3, [r7, #8]
 8000678:	2201      	movs	r2, #1
 800067a:	4619      	mov	r1, r3
 800067c:	6878      	ldr	r0, [r7, #4]
 800067e:	f7ff ff53 	bl	8000528 <LedControl_SetStatus>
		delay_ms(500);
 8000682:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000686:	f7ff fdc9 	bl	800021c <delay_ms>
		LedControl_SetStatus(GPIOx1, GPIO_PIN_ID1, GPIO_PIN_LOW);
 800068a:	897b      	ldrh	r3, [r7, #10]
 800068c:	2200      	movs	r2, #0
 800068e:	4619      	mov	r1, r3
 8000690:	68f8      	ldr	r0, [r7, #12]
 8000692:	f7ff ff49 	bl	8000528 <LedControl_SetStatus>
		LedControl_SetStatus(GPIOx2, GPIO_PIN_ID2, GPIO_PIN_LOW);
 8000696:	893b      	ldrh	r3, [r7, #8]
 8000698:	2200      	movs	r2, #0
 800069a:	4619      	mov	r1, r3
 800069c:	6878      	ldr	r0, [r7, #4]
 800069e:	f7ff ff43 	bl	8000528 <LedControl_SetStatus>
		delay_ms(500);
 80006a2:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80006a6:	f7ff fdb9 	bl	800021c <delay_ms>
	for (uint32_t i = 0; i < num; i++)
 80006aa:	697b      	ldr	r3, [r7, #20]
 80006ac:	3301      	adds	r3, #1
 80006ae:	617b      	str	r3, [r7, #20]
 80006b0:	697a      	ldr	r2, [r7, #20]
 80006b2:	6a3b      	ldr	r3, [r7, #32]
 80006b4:	429a      	cmp	r2, r3
 80006b6:	d3d8      	bcc.n	800066a <Blinkled_StatusPower+0x1a>
	}
}
 80006b8:	bf00      	nop
 80006ba:	bf00      	nop
 80006bc:	3718      	adds	r7, #24
 80006be:	46bd      	mov	sp, r7
 80006c0:	bd80      	pop	{r7, pc}
	...

080006c4 <LedControl_TimPressRealease>:
 * @brief  Control led with state button
 * @param  None
 * @retval None
 */

void LedControl_TimPressRealease(void) {
 80006c4:	b598      	push	{r3, r4, r7, lr}
 80006c6:	af00      	add	r7, sp, #0
//	BUTTON B2****************************************************************************************************
	if (buttonB2.State == BUTTON_PRESSED) {
 80006c8:	4b4f      	ldr	r3, [pc, #316]	; (8000808 <LedControl_TimPressRealease+0x144>)
 80006ca:	781b      	ldrb	r3, [r3, #0]
 80006cc:	2b01      	cmp	r3, #1
 80006ce:	d115      	bne.n	80006fc <LedControl_TimPressRealease+0x38>
		if (CalculatorTime(buttonB2.timePress, GetMilSecTick()) > 500) { // Kiểm tra xem nút có đang được giữ không
 80006d0:	4b4d      	ldr	r3, [pc, #308]	; (8000808 <LedControl_TimPressRealease+0x144>)
 80006d2:	685c      	ldr	r4, [r3, #4]
 80006d4:	f000 fd28 	bl	8001128 <GetMilSecTick>
 80006d8:	4603      	mov	r3, r0
 80006da:	4619      	mov	r1, r3
 80006dc:	4620      	mov	r0, r4
 80006de:	f7ff ff63 	bl	80005a8 <CalculatorTime>
 80006e2:	4603      	mov	r3, r0
 80006e4:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 80006e8:	d908      	bls.n	80006fc <LedControl_TimPressRealease+0x38>
			buttonB2.Count = 0;
 80006ea:	4b47      	ldr	r3, [pc, #284]	; (8000808 <LedControl_TimPressRealease+0x144>)
 80006ec:	2200      	movs	r2, #0
 80006ee:	60da      	str	r2, [r3, #12]
			LedControl_SetStatus(LEDBLUE2_GPIO_PORT, LEDBLUE2_GPIO_PIN,GPIO_PIN_HIGH);
 80006f0:	2201      	movs	r2, #1
 80006f2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80006f6:	4845      	ldr	r0, [pc, #276]	; (800080c <LedControl_TimPressRealease+0x148>)
 80006f8:	f7ff ff16 	bl	8000528 <LedControl_SetStatus>
		}
	}
	if (buttonB2.State == BUTTON_RELEASED) {
 80006fc:	4b42      	ldr	r3, [pc, #264]	; (8000808 <LedControl_TimPressRealease+0x144>)
 80006fe:	781b      	ldrb	r3, [r3, #0]
 8000700:	2b02      	cmp	r3, #2
 8000702:	d130      	bne.n	8000766 <LedControl_TimPressRealease+0xa2>

		LedControl_SetStatus(LEDBLUE2_GPIO_PORT, LEDBLUE2_GPIO_PIN, GPIO_PIN_LOW);
 8000704:	2200      	movs	r2, #0
 8000706:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800070a:	4840      	ldr	r0, [pc, #256]	; (800080c <LedControl_TimPressRealease+0x148>)
 800070c:	f7ff ff0c 	bl	8000528 <LedControl_SetStatus>
		if (buttonB2.Count == 1) {
 8000710:	4b3d      	ldr	r3, [pc, #244]	; (8000808 <LedControl_TimPressRealease+0x144>)
 8000712:	68db      	ldr	r3, [r3, #12]
 8000714:	2b01      	cmp	r3, #1
 8000716:	d10f      	bne.n	8000738 <LedControl_TimPressRealease+0x74>
				if (CalculatorTime(buttonB2.timeReleased, GetMilSecTick()) > 400) // Kiểm tra khoảng thời gian giữa 2 lần nhấn nút
 8000718:	4b3b      	ldr	r3, [pc, #236]	; (8000808 <LedControl_TimPressRealease+0x144>)
 800071a:	689c      	ldr	r4, [r3, #8]
 800071c:	f000 fd04 	bl	8001128 <GetMilSecTick>
 8000720:	4603      	mov	r3, r0
 8000722:	4619      	mov	r1, r3
 8000724:	4620      	mov	r0, r4
 8000726:	f7ff ff3f 	bl	80005a8 <CalculatorTime>
 800072a:	4603      	mov	r3, r0
 800072c:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8000730:	d902      	bls.n	8000738 <LedControl_TimPressRealease+0x74>
					buttonB2.Count = 0;
 8000732:	4b35      	ldr	r3, [pc, #212]	; (8000808 <LedControl_TimPressRealease+0x144>)
 8000734:	2200      	movs	r2, #0
 8000736:	60da      	str	r2, [r3, #12]

		}
		if (buttonB2.Count == 2) {
 8000738:	4b33      	ldr	r3, [pc, #204]	; (8000808 <LedControl_TimPressRealease+0x144>)
 800073a:	68db      	ldr	r3, [r3, #12]
 800073c:	2b02      	cmp	r3, #2
 800073e:	d105      	bne.n	800074c <LedControl_TimPressRealease+0x88>
			LedControl_SetStatus(LEDBLUE2_GPIO_PORT, LEDBLUE2_GPIO_PIN, GPIO_PIN_HIGH);
 8000740:	2201      	movs	r2, #1
 8000742:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000746:	4831      	ldr	r0, [pc, #196]	; (800080c <LedControl_TimPressRealease+0x148>)
 8000748:	f7ff feee 	bl	8000528 <LedControl_SetStatus>
		}
		if (buttonB2.Count >= 3) {
 800074c:	4b2e      	ldr	r3, [pc, #184]	; (8000808 <LedControl_TimPressRealease+0x144>)
 800074e:	68db      	ldr	r3, [r3, #12]
 8000750:	2b02      	cmp	r3, #2
 8000752:	d908      	bls.n	8000766 <LedControl_TimPressRealease+0xa2>
			LedControl_SetStatus(LEDBLUE2_GPIO_PORT, LEDBLUE2_GPIO_PIN, GPIO_PIN_LOW);
 8000754:	2200      	movs	r2, #0
 8000756:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800075a:	482c      	ldr	r0, [pc, #176]	; (800080c <LedControl_TimPressRealease+0x148>)
 800075c:	f7ff fee4 	bl	8000528 <LedControl_SetStatus>
			buttonB2.Count = 0;
 8000760:	4b29      	ldr	r3, [pc, #164]	; (8000808 <LedControl_TimPressRealease+0x144>)
 8000762:	2200      	movs	r2, #0
 8000764:	60da      	str	r2, [r3, #12]
	if (buttonB2.State == NO_CLICK) {

	}

//BUTTON B4****************************************************************************************************
	if (buttonB4.State == BUTTON_PRESSED) {
 8000766:	4b2a      	ldr	r3, [pc, #168]	; (8000810 <LedControl_TimPressRealease+0x14c>)
 8000768:	781b      	ldrb	r3, [r3, #0]
 800076a:	2b01      	cmp	r3, #1
 800076c:	d115      	bne.n	800079a <LedControl_TimPressRealease+0xd6>
		if (CalculatorTime(buttonB4.timePress, GetMilSecTick()) > 500) {			// Kiểm tra xem nút có đang được giữ không
 800076e:	4b28      	ldr	r3, [pc, #160]	; (8000810 <LedControl_TimPressRealease+0x14c>)
 8000770:	685c      	ldr	r4, [r3, #4]
 8000772:	f000 fcd9 	bl	8001128 <GetMilSecTick>
 8000776:	4603      	mov	r3, r0
 8000778:	4619      	mov	r1, r3
 800077a:	4620      	mov	r0, r4
 800077c:	f7ff ff14 	bl	80005a8 <CalculatorTime>
 8000780:	4603      	mov	r3, r0
 8000782:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8000786:	d908      	bls.n	800079a <LedControl_TimPressRealease+0xd6>
			buttonB4.Count = 0;
 8000788:	4b21      	ldr	r3, [pc, #132]	; (8000810 <LedControl_TimPressRealease+0x14c>)
 800078a:	2200      	movs	r2, #0
 800078c:	60da      	str	r2, [r3, #12]
			LedControl_SetStatus(LEDRED2_GPIO_PORT, LEDRED2_GPIO_PIN,GPIO_PIN_HIGH);
 800078e:	2201      	movs	r2, #1
 8000790:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000794:	481f      	ldr	r0, [pc, #124]	; (8000814 <LedControl_TimPressRealease+0x150>)
 8000796:	f7ff fec7 	bl	8000528 <LedControl_SetStatus>
		}
	}
	if (buttonB4.State == BUTTON_RELEASED) {
 800079a:	4b1d      	ldr	r3, [pc, #116]	; (8000810 <LedControl_TimPressRealease+0x14c>)
 800079c:	781b      	ldrb	r3, [r3, #0]
 800079e:	2b02      	cmp	r3, #2
 80007a0:	d130      	bne.n	8000804 <LedControl_TimPressRealease+0x140>

		LedControl_SetStatus(LEDRED2_GPIO_PORT, LEDRED2_GPIO_PIN, GPIO_PIN_LOW);
 80007a2:	2200      	movs	r2, #0
 80007a4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80007a8:	481a      	ldr	r0, [pc, #104]	; (8000814 <LedControl_TimPressRealease+0x150>)
 80007aa:	f7ff febd 	bl	8000528 <LedControl_SetStatus>
		if (buttonB4.Count == 1) {
 80007ae:	4b18      	ldr	r3, [pc, #96]	; (8000810 <LedControl_TimPressRealease+0x14c>)
 80007b0:	68db      	ldr	r3, [r3, #12]
 80007b2:	2b01      	cmp	r3, #1
 80007b4:	d10f      	bne.n	80007d6 <LedControl_TimPressRealease+0x112>
				if (CalculatorTime(buttonB4.timeReleased, GetMilSecTick()) > 400)  // Kiểm tra khoảng thời gian giữa 2 lần nhấn nút
 80007b6:	4b16      	ldr	r3, [pc, #88]	; (8000810 <LedControl_TimPressRealease+0x14c>)
 80007b8:	689c      	ldr	r4, [r3, #8]
 80007ba:	f000 fcb5 	bl	8001128 <GetMilSecTick>
 80007be:	4603      	mov	r3, r0
 80007c0:	4619      	mov	r1, r3
 80007c2:	4620      	mov	r0, r4
 80007c4:	f7ff fef0 	bl	80005a8 <CalculatorTime>
 80007c8:	4603      	mov	r3, r0
 80007ca:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 80007ce:	d902      	bls.n	80007d6 <LedControl_TimPressRealease+0x112>
					buttonB4.Count = 0;
 80007d0:	4b0f      	ldr	r3, [pc, #60]	; (8000810 <LedControl_TimPressRealease+0x14c>)
 80007d2:	2200      	movs	r2, #0
 80007d4:	60da      	str	r2, [r3, #12]
		}
		if (buttonB4.Count == 2) {
 80007d6:	4b0e      	ldr	r3, [pc, #56]	; (8000810 <LedControl_TimPressRealease+0x14c>)
 80007d8:	68db      	ldr	r3, [r3, #12]
 80007da:	2b02      	cmp	r3, #2
 80007dc:	d105      	bne.n	80007ea <LedControl_TimPressRealease+0x126>
			LedControl_SetStatus(LEDRED2_GPIO_PORT, LEDRED2_GPIO_PIN, GPIO_PIN_HIGH);
 80007de:	2201      	movs	r2, #1
 80007e0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80007e4:	480b      	ldr	r0, [pc, #44]	; (8000814 <LedControl_TimPressRealease+0x150>)
 80007e6:	f7ff fe9f 	bl	8000528 <LedControl_SetStatus>
		}
		if (buttonB4.Count >= 3) {
 80007ea:	4b09      	ldr	r3, [pc, #36]	; (8000810 <LedControl_TimPressRealease+0x14c>)
 80007ec:	68db      	ldr	r3, [r3, #12]
 80007ee:	2b02      	cmp	r3, #2
 80007f0:	d908      	bls.n	8000804 <LedControl_TimPressRealease+0x140>
			LedControl_SetStatus(LEDRED2_GPIO_PORT, LEDRED2_GPIO_PIN, GPIO_PIN_LOW);
 80007f2:	2200      	movs	r2, #0
 80007f4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80007f8:	4806      	ldr	r0, [pc, #24]	; (8000814 <LedControl_TimPressRealease+0x150>)
 80007fa:	f7ff fe95 	bl	8000528 <LedControl_SetStatus>
			buttonB4.Count = 0;
 80007fe:	4b04      	ldr	r3, [pc, #16]	; (8000810 <LedControl_TimPressRealease+0x14c>)
 8000800:	2200      	movs	r2, #0
 8000802:	60da      	str	r2, [r3, #12]
		}
	}
	if (buttonB4.State == NO_CLICK) {

	}
}
 8000804:	bf00      	nop
 8000806:	bd98      	pop	{r3, r4, r7, pc}
 8000808:	20000048 	.word	0x20000048
 800080c:	40020000 	.word	0x40020000
 8000810:	20000058 	.word	0x20000058
 8000814:	40020400 	.word	0x40020400

08000818 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000818:	480d      	ldr	r0, [pc, #52]	; (8000850 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800081a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800081c:	f000 f826 	bl	800086c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000820:	480c      	ldr	r0, [pc, #48]	; (8000854 <LoopForever+0x6>)
  ldr r1, =_edata
 8000822:	490d      	ldr	r1, [pc, #52]	; (8000858 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000824:	4a0d      	ldr	r2, [pc, #52]	; (800085c <LoopForever+0xe>)
  movs r3, #0
 8000826:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000828:	e002      	b.n	8000830 <LoopCopyDataInit>

0800082a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800082a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800082c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800082e:	3304      	adds	r3, #4

08000830 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000830:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000832:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000834:	d3f9      	bcc.n	800082a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000836:	4a0a      	ldr	r2, [pc, #40]	; (8000860 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000838:	4c0a      	ldr	r4, [pc, #40]	; (8000864 <LoopForever+0x16>)
  movs r3, #0
 800083a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800083c:	e001      	b.n	8000842 <LoopFillZerobss>

0800083e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800083e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000840:	3204      	adds	r2, #4

08000842 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000842:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000844:	d3fb      	bcc.n	800083e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000846:	f000 fca3 	bl	8001190 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800084a:	f7ff fcc3 	bl	80001d4 <main>

0800084e <LoopForever>:

LoopForever:
  b LoopForever
 800084e:	e7fe      	b.n	800084e <LoopForever>
  ldr   r0, =_estack
 8000850:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000854:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000858:	20000024 	.word	0x20000024
  ldr r2, =_sidata
 800085c:	080011f8 	.word	0x080011f8
  ldr r2, =_sbss
 8000860:	20000024 	.word	0x20000024
  ldr r4, =_ebss
 8000864:	200001ec 	.word	0x200001ec

08000868 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000868:	e7fe      	b.n	8000868 <ADC_IRQHandler>
	...

0800086c <SystemInit>:
 800086c:	b580      	push	{r7, lr}
 800086e:	af00      	add	r7, sp, #0
 8000870:	4b16      	ldr	r3, [pc, #88]	; (80008cc <SystemInit+0x60>)
 8000872:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000876:	4a15      	ldr	r2, [pc, #84]	; (80008cc <SystemInit+0x60>)
 8000878:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800087c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8000880:	4b13      	ldr	r3, [pc, #76]	; (80008d0 <SystemInit+0x64>)
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	4a12      	ldr	r2, [pc, #72]	; (80008d0 <SystemInit+0x64>)
 8000886:	f043 0301 	orr.w	r3, r3, #1
 800088a:	6013      	str	r3, [r2, #0]
 800088c:	4b10      	ldr	r3, [pc, #64]	; (80008d0 <SystemInit+0x64>)
 800088e:	2200      	movs	r2, #0
 8000890:	609a      	str	r2, [r3, #8]
 8000892:	4b0f      	ldr	r3, [pc, #60]	; (80008d0 <SystemInit+0x64>)
 8000894:	681b      	ldr	r3, [r3, #0]
 8000896:	4a0e      	ldr	r2, [pc, #56]	; (80008d0 <SystemInit+0x64>)
 8000898:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 800089c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80008a0:	6013      	str	r3, [r2, #0]
 80008a2:	4b0b      	ldr	r3, [pc, #44]	; (80008d0 <SystemInit+0x64>)
 80008a4:	4a0b      	ldr	r2, [pc, #44]	; (80008d4 <SystemInit+0x68>)
 80008a6:	605a      	str	r2, [r3, #4]
 80008a8:	4b09      	ldr	r3, [pc, #36]	; (80008d0 <SystemInit+0x64>)
 80008aa:	681b      	ldr	r3, [r3, #0]
 80008ac:	4a08      	ldr	r2, [pc, #32]	; (80008d0 <SystemInit+0x64>)
 80008ae:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80008b2:	6013      	str	r3, [r2, #0]
 80008b4:	4b06      	ldr	r3, [pc, #24]	; (80008d0 <SystemInit+0x64>)
 80008b6:	2200      	movs	r2, #0
 80008b8:	60da      	str	r2, [r3, #12]
 80008ba:	f000 f889 	bl	80009d0 <SetSysClock>
 80008be:	4b03      	ldr	r3, [pc, #12]	; (80008cc <SystemInit+0x60>)
 80008c0:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80008c4:	609a      	str	r2, [r3, #8]
 80008c6:	bf00      	nop
 80008c8:	bd80      	pop	{r7, pc}
 80008ca:	bf00      	nop
 80008cc:	e000ed00 	.word	0xe000ed00
 80008d0:	40023800 	.word	0x40023800
 80008d4:	24003010 	.word	0x24003010

080008d8 <SystemCoreClockUpdate>:
 80008d8:	b480      	push	{r7}
 80008da:	b087      	sub	sp, #28
 80008dc:	af00      	add	r7, sp, #0
 80008de:	2300      	movs	r3, #0
 80008e0:	613b      	str	r3, [r7, #16]
 80008e2:	2300      	movs	r3, #0
 80008e4:	617b      	str	r3, [r7, #20]
 80008e6:	2302      	movs	r3, #2
 80008e8:	60fb      	str	r3, [r7, #12]
 80008ea:	2300      	movs	r3, #0
 80008ec:	60bb      	str	r3, [r7, #8]
 80008ee:	2302      	movs	r3, #2
 80008f0:	607b      	str	r3, [r7, #4]
 80008f2:	4b32      	ldr	r3, [pc, #200]	; (80009bc <SystemCoreClockUpdate+0xe4>)
 80008f4:	689b      	ldr	r3, [r3, #8]
 80008f6:	f003 030c 	and.w	r3, r3, #12
 80008fa:	613b      	str	r3, [r7, #16]
 80008fc:	693b      	ldr	r3, [r7, #16]
 80008fe:	2b04      	cmp	r3, #4
 8000900:	d007      	beq.n	8000912 <SystemCoreClockUpdate+0x3a>
 8000902:	2b08      	cmp	r3, #8
 8000904:	d009      	beq.n	800091a <SystemCoreClockUpdate+0x42>
 8000906:	2b00      	cmp	r3, #0
 8000908:	d13d      	bne.n	8000986 <SystemCoreClockUpdate+0xae>
 800090a:	4b2d      	ldr	r3, [pc, #180]	; (80009c0 <SystemCoreClockUpdate+0xe8>)
 800090c:	4a2d      	ldr	r2, [pc, #180]	; (80009c4 <SystemCoreClockUpdate+0xec>)
 800090e:	601a      	str	r2, [r3, #0]
 8000910:	e03d      	b.n	800098e <SystemCoreClockUpdate+0xb6>
 8000912:	4b2b      	ldr	r3, [pc, #172]	; (80009c0 <SystemCoreClockUpdate+0xe8>)
 8000914:	4a2c      	ldr	r2, [pc, #176]	; (80009c8 <SystemCoreClockUpdate+0xf0>)
 8000916:	601a      	str	r2, [r3, #0]
 8000918:	e039      	b.n	800098e <SystemCoreClockUpdate+0xb6>
 800091a:	4b28      	ldr	r3, [pc, #160]	; (80009bc <SystemCoreClockUpdate+0xe4>)
 800091c:	685b      	ldr	r3, [r3, #4]
 800091e:	0d9b      	lsrs	r3, r3, #22
 8000920:	f003 0301 	and.w	r3, r3, #1
 8000924:	60bb      	str	r3, [r7, #8]
 8000926:	4b25      	ldr	r3, [pc, #148]	; (80009bc <SystemCoreClockUpdate+0xe4>)
 8000928:	685b      	ldr	r3, [r3, #4]
 800092a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800092e:	607b      	str	r3, [r7, #4]
 8000930:	68bb      	ldr	r3, [r7, #8]
 8000932:	2b00      	cmp	r3, #0
 8000934:	d00c      	beq.n	8000950 <SystemCoreClockUpdate+0x78>
 8000936:	4a24      	ldr	r2, [pc, #144]	; (80009c8 <SystemCoreClockUpdate+0xf0>)
 8000938:	687b      	ldr	r3, [r7, #4]
 800093a:	fbb2 f3f3 	udiv	r3, r2, r3
 800093e:	4a1f      	ldr	r2, [pc, #124]	; (80009bc <SystemCoreClockUpdate+0xe4>)
 8000940:	6852      	ldr	r2, [r2, #4]
 8000942:	0992      	lsrs	r2, r2, #6
 8000944:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000948:	fb02 f303 	mul.w	r3, r2, r3
 800094c:	617b      	str	r3, [r7, #20]
 800094e:	e00b      	b.n	8000968 <SystemCoreClockUpdate+0x90>
 8000950:	4a1c      	ldr	r2, [pc, #112]	; (80009c4 <SystemCoreClockUpdate+0xec>)
 8000952:	687b      	ldr	r3, [r7, #4]
 8000954:	fbb2 f3f3 	udiv	r3, r2, r3
 8000958:	4a18      	ldr	r2, [pc, #96]	; (80009bc <SystemCoreClockUpdate+0xe4>)
 800095a:	6852      	ldr	r2, [r2, #4]
 800095c:	0992      	lsrs	r2, r2, #6
 800095e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000962:	fb02 f303 	mul.w	r3, r2, r3
 8000966:	617b      	str	r3, [r7, #20]
 8000968:	4b14      	ldr	r3, [pc, #80]	; (80009bc <SystemCoreClockUpdate+0xe4>)
 800096a:	685b      	ldr	r3, [r3, #4]
 800096c:	0c1b      	lsrs	r3, r3, #16
 800096e:	f003 0303 	and.w	r3, r3, #3
 8000972:	3301      	adds	r3, #1
 8000974:	005b      	lsls	r3, r3, #1
 8000976:	60fb      	str	r3, [r7, #12]
 8000978:	697a      	ldr	r2, [r7, #20]
 800097a:	68fb      	ldr	r3, [r7, #12]
 800097c:	fbb2 f3f3 	udiv	r3, r2, r3
 8000980:	4a0f      	ldr	r2, [pc, #60]	; (80009c0 <SystemCoreClockUpdate+0xe8>)
 8000982:	6013      	str	r3, [r2, #0]
 8000984:	e003      	b.n	800098e <SystemCoreClockUpdate+0xb6>
 8000986:	4b0e      	ldr	r3, [pc, #56]	; (80009c0 <SystemCoreClockUpdate+0xe8>)
 8000988:	4a0e      	ldr	r2, [pc, #56]	; (80009c4 <SystemCoreClockUpdate+0xec>)
 800098a:	601a      	str	r2, [r3, #0]
 800098c:	bf00      	nop
 800098e:	4b0b      	ldr	r3, [pc, #44]	; (80009bc <SystemCoreClockUpdate+0xe4>)
 8000990:	689b      	ldr	r3, [r3, #8]
 8000992:	091b      	lsrs	r3, r3, #4
 8000994:	f003 030f 	and.w	r3, r3, #15
 8000998:	4a0c      	ldr	r2, [pc, #48]	; (80009cc <SystemCoreClockUpdate+0xf4>)
 800099a:	5cd3      	ldrb	r3, [r2, r3]
 800099c:	b2db      	uxtb	r3, r3
 800099e:	613b      	str	r3, [r7, #16]
 80009a0:	4b07      	ldr	r3, [pc, #28]	; (80009c0 <SystemCoreClockUpdate+0xe8>)
 80009a2:	681a      	ldr	r2, [r3, #0]
 80009a4:	693b      	ldr	r3, [r7, #16]
 80009a6:	fa22 f303 	lsr.w	r3, r2, r3
 80009aa:	4a05      	ldr	r2, [pc, #20]	; (80009c0 <SystemCoreClockUpdate+0xe8>)
 80009ac:	6013      	str	r3, [r2, #0]
 80009ae:	bf00      	nop
 80009b0:	371c      	adds	r7, #28
 80009b2:	46bd      	mov	sp, r7
 80009b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009b8:	4770      	bx	lr
 80009ba:	bf00      	nop
 80009bc:	40023800 	.word	0x40023800
 80009c0:	20000000 	.word	0x20000000
 80009c4:	00f42400 	.word	0x00f42400
 80009c8:	017d7840 	.word	0x017d7840
 80009cc:	20000004 	.word	0x20000004

080009d0 <SetSysClock>:
 80009d0:	b480      	push	{r7}
 80009d2:	af00      	add	r7, sp, #0
 80009d4:	4b22      	ldr	r3, [pc, #136]	; (8000a60 <SetSysClock+0x90>)
 80009d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80009d8:	4a21      	ldr	r2, [pc, #132]	; (8000a60 <SetSysClock+0x90>)
 80009da:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80009de:	6413      	str	r3, [r2, #64]	; 0x40
 80009e0:	4b20      	ldr	r3, [pc, #128]	; (8000a64 <SetSysClock+0x94>)
 80009e2:	681b      	ldr	r3, [r3, #0]
 80009e4:	4a1f      	ldr	r2, [pc, #124]	; (8000a64 <SetSysClock+0x94>)
 80009e6:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80009ea:	6013      	str	r3, [r2, #0]
 80009ec:	4b1c      	ldr	r3, [pc, #112]	; (8000a60 <SetSysClock+0x90>)
 80009ee:	4a1c      	ldr	r2, [pc, #112]	; (8000a60 <SetSysClock+0x90>)
 80009f0:	689b      	ldr	r3, [r3, #8]
 80009f2:	6093      	str	r3, [r2, #8]
 80009f4:	4b1a      	ldr	r3, [pc, #104]	; (8000a60 <SetSysClock+0x90>)
 80009f6:	4a1a      	ldr	r2, [pc, #104]	; (8000a60 <SetSysClock+0x90>)
 80009f8:	689b      	ldr	r3, [r3, #8]
 80009fa:	6093      	str	r3, [r2, #8]
 80009fc:	4b18      	ldr	r3, [pc, #96]	; (8000a60 <SetSysClock+0x90>)
 80009fe:	689b      	ldr	r3, [r3, #8]
 8000a00:	4a17      	ldr	r2, [pc, #92]	; (8000a60 <SetSysClock+0x90>)
 8000a02:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000a06:	6093      	str	r3, [r2, #8]
 8000a08:	4b15      	ldr	r3, [pc, #84]	; (8000a60 <SetSysClock+0x90>)
 8000a0a:	4a17      	ldr	r2, [pc, #92]	; (8000a68 <SetSysClock+0x98>)
 8000a0c:	605a      	str	r2, [r3, #4]
 8000a0e:	4b14      	ldr	r3, [pc, #80]	; (8000a60 <SetSysClock+0x90>)
 8000a10:	681b      	ldr	r3, [r3, #0]
 8000a12:	4a13      	ldr	r2, [pc, #76]	; (8000a60 <SetSysClock+0x90>)
 8000a14:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000a18:	6013      	str	r3, [r2, #0]
 8000a1a:	bf00      	nop
 8000a1c:	4b10      	ldr	r3, [pc, #64]	; (8000a60 <SetSysClock+0x90>)
 8000a1e:	681b      	ldr	r3, [r3, #0]
 8000a20:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000a24:	2b00      	cmp	r3, #0
 8000a26:	d0f9      	beq.n	8000a1c <SetSysClock+0x4c>
 8000a28:	4b10      	ldr	r3, [pc, #64]	; (8000a6c <SetSysClock+0x9c>)
 8000a2a:	f240 6202 	movw	r2, #1538	; 0x602
 8000a2e:	601a      	str	r2, [r3, #0]
 8000a30:	4b0b      	ldr	r3, [pc, #44]	; (8000a60 <SetSysClock+0x90>)
 8000a32:	689b      	ldr	r3, [r3, #8]
 8000a34:	4a0a      	ldr	r2, [pc, #40]	; (8000a60 <SetSysClock+0x90>)
 8000a36:	f023 0303 	bic.w	r3, r3, #3
 8000a3a:	6093      	str	r3, [r2, #8]
 8000a3c:	4b08      	ldr	r3, [pc, #32]	; (8000a60 <SetSysClock+0x90>)
 8000a3e:	689b      	ldr	r3, [r3, #8]
 8000a40:	4a07      	ldr	r2, [pc, #28]	; (8000a60 <SetSysClock+0x90>)
 8000a42:	f043 0302 	orr.w	r3, r3, #2
 8000a46:	6093      	str	r3, [r2, #8]
 8000a48:	bf00      	nop
 8000a4a:	4b05      	ldr	r3, [pc, #20]	; (8000a60 <SetSysClock+0x90>)
 8000a4c:	689b      	ldr	r3, [r3, #8]
 8000a4e:	f003 030c 	and.w	r3, r3, #12
 8000a52:	2b08      	cmp	r3, #8
 8000a54:	d1f9      	bne.n	8000a4a <SetSysClock+0x7a>
 8000a56:	bf00      	nop
 8000a58:	46bd      	mov	sp, r7
 8000a5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a5e:	4770      	bx	lr
 8000a60:	40023800 	.word	0x40023800
 8000a64:	40007000 	.word	0x40007000
 8000a68:	08015410 	.word	0x08015410
 8000a6c:	40023c00 	.word	0x40023c00

08000a70 <NVIC_Init>:
 8000a70:	b480      	push	{r7}
 8000a72:	b085      	sub	sp, #20
 8000a74:	af00      	add	r7, sp, #0
 8000a76:	6078      	str	r0, [r7, #4]
 8000a78:	2300      	movs	r3, #0
 8000a7a:	73fb      	strb	r3, [r7, #15]
 8000a7c:	2300      	movs	r3, #0
 8000a7e:	73bb      	strb	r3, [r7, #14]
 8000a80:	230f      	movs	r3, #15
 8000a82:	737b      	strb	r3, [r7, #13]
 8000a84:	687b      	ldr	r3, [r7, #4]
 8000a86:	78db      	ldrb	r3, [r3, #3]
 8000a88:	2b00      	cmp	r3, #0
 8000a8a:	d039      	beq.n	8000b00 <NVIC_Init+0x90>
 8000a8c:	4b27      	ldr	r3, [pc, #156]	; (8000b2c <NVIC_Init+0xbc>)
 8000a8e:	68db      	ldr	r3, [r3, #12]
 8000a90:	43db      	mvns	r3, r3
 8000a92:	0a1b      	lsrs	r3, r3, #8
 8000a94:	b2db      	uxtb	r3, r3
 8000a96:	f003 0307 	and.w	r3, r3, #7
 8000a9a:	73fb      	strb	r3, [r7, #15]
 8000a9c:	7bfb      	ldrb	r3, [r7, #15]
 8000a9e:	f1c3 0304 	rsb	r3, r3, #4
 8000aa2:	73bb      	strb	r3, [r7, #14]
 8000aa4:	7b7a      	ldrb	r2, [r7, #13]
 8000aa6:	7bfb      	ldrb	r3, [r7, #15]
 8000aa8:	fa42 f303 	asr.w	r3, r2, r3
 8000aac:	737b      	strb	r3, [r7, #13]
 8000aae:	687b      	ldr	r3, [r7, #4]
 8000ab0:	785b      	ldrb	r3, [r3, #1]
 8000ab2:	461a      	mov	r2, r3
 8000ab4:	7bbb      	ldrb	r3, [r7, #14]
 8000ab6:	fa02 f303 	lsl.w	r3, r2, r3
 8000aba:	73fb      	strb	r3, [r7, #15]
 8000abc:	687b      	ldr	r3, [r7, #4]
 8000abe:	789a      	ldrb	r2, [r3, #2]
 8000ac0:	7b7b      	ldrb	r3, [r7, #13]
 8000ac2:	4013      	ands	r3, r2
 8000ac4:	b2da      	uxtb	r2, r3
 8000ac6:	7bfb      	ldrb	r3, [r7, #15]
 8000ac8:	4313      	orrs	r3, r2
 8000aca:	73fb      	strb	r3, [r7, #15]
 8000acc:	7bfb      	ldrb	r3, [r7, #15]
 8000ace:	011b      	lsls	r3, r3, #4
 8000ad0:	73fb      	strb	r3, [r7, #15]
 8000ad2:	4a17      	ldr	r2, [pc, #92]	; (8000b30 <NVIC_Init+0xc0>)
 8000ad4:	687b      	ldr	r3, [r7, #4]
 8000ad6:	781b      	ldrb	r3, [r3, #0]
 8000ad8:	4413      	add	r3, r2
 8000ada:	7bfa      	ldrb	r2, [r7, #15]
 8000adc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8000ae0:	687b      	ldr	r3, [r7, #4]
 8000ae2:	781b      	ldrb	r3, [r3, #0]
 8000ae4:	f003 031f 	and.w	r3, r3, #31
 8000ae8:	4911      	ldr	r1, [pc, #68]	; (8000b30 <NVIC_Init+0xc0>)
 8000aea:	687a      	ldr	r2, [r7, #4]
 8000aec:	7812      	ldrb	r2, [r2, #0]
 8000aee:	0952      	lsrs	r2, r2, #5
 8000af0:	b2d2      	uxtb	r2, r2
 8000af2:	4610      	mov	r0, r2
 8000af4:	2201      	movs	r2, #1
 8000af6:	fa02 f303 	lsl.w	r3, r2, r3
 8000afa:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
 8000afe:	e00f      	b.n	8000b20 <NVIC_Init+0xb0>
 8000b00:	687b      	ldr	r3, [r7, #4]
 8000b02:	781b      	ldrb	r3, [r3, #0]
 8000b04:	f003 031f 	and.w	r3, r3, #31
 8000b08:	4909      	ldr	r1, [pc, #36]	; (8000b30 <NVIC_Init+0xc0>)
 8000b0a:	687a      	ldr	r2, [r7, #4]
 8000b0c:	7812      	ldrb	r2, [r2, #0]
 8000b0e:	0952      	lsrs	r2, r2, #5
 8000b10:	b2d2      	uxtb	r2, r2
 8000b12:	4610      	mov	r0, r2
 8000b14:	2201      	movs	r2, #1
 8000b16:	409a      	lsls	r2, r3
 8000b18:	f100 0320 	add.w	r3, r0, #32
 8000b1c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000b20:	bf00      	nop
 8000b22:	3714      	adds	r7, #20
 8000b24:	46bd      	mov	sp, r7
 8000b26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b2a:	4770      	bx	lr
 8000b2c:	e000ed00 	.word	0xe000ed00
 8000b30:	e000e100 	.word	0xe000e100

08000b34 <EXTI_Init>:
 8000b34:	b480      	push	{r7}
 8000b36:	b085      	sub	sp, #20
 8000b38:	af00      	add	r7, sp, #0
 8000b3a:	6078      	str	r0, [r7, #4]
 8000b3c:	2300      	movs	r3, #0
 8000b3e:	60fb      	str	r3, [r7, #12]
 8000b40:	4b34      	ldr	r3, [pc, #208]	; (8000c14 <EXTI_Init+0xe0>)
 8000b42:	60fb      	str	r3, [r7, #12]
 8000b44:	687b      	ldr	r3, [r7, #4]
 8000b46:	799b      	ldrb	r3, [r3, #6]
 8000b48:	2b00      	cmp	r3, #0
 8000b4a:	d04f      	beq.n	8000bec <EXTI_Init+0xb8>
 8000b4c:	4b31      	ldr	r3, [pc, #196]	; (8000c14 <EXTI_Init+0xe0>)
 8000b4e:	681a      	ldr	r2, [r3, #0]
 8000b50:	687b      	ldr	r3, [r7, #4]
 8000b52:	681b      	ldr	r3, [r3, #0]
 8000b54:	43db      	mvns	r3, r3
 8000b56:	492f      	ldr	r1, [pc, #188]	; (8000c14 <EXTI_Init+0xe0>)
 8000b58:	4013      	ands	r3, r2
 8000b5a:	600b      	str	r3, [r1, #0]
 8000b5c:	4b2d      	ldr	r3, [pc, #180]	; (8000c14 <EXTI_Init+0xe0>)
 8000b5e:	685a      	ldr	r2, [r3, #4]
 8000b60:	687b      	ldr	r3, [r7, #4]
 8000b62:	681b      	ldr	r3, [r3, #0]
 8000b64:	43db      	mvns	r3, r3
 8000b66:	492b      	ldr	r1, [pc, #172]	; (8000c14 <EXTI_Init+0xe0>)
 8000b68:	4013      	ands	r3, r2
 8000b6a:	604b      	str	r3, [r1, #4]
 8000b6c:	687b      	ldr	r3, [r7, #4]
 8000b6e:	791b      	ldrb	r3, [r3, #4]
 8000b70:	461a      	mov	r2, r3
 8000b72:	68fb      	ldr	r3, [r7, #12]
 8000b74:	4413      	add	r3, r2
 8000b76:	60fb      	str	r3, [r7, #12]
 8000b78:	68fb      	ldr	r3, [r7, #12]
 8000b7a:	6819      	ldr	r1, [r3, #0]
 8000b7c:	687b      	ldr	r3, [r7, #4]
 8000b7e:	681a      	ldr	r2, [r3, #0]
 8000b80:	68fb      	ldr	r3, [r7, #12]
 8000b82:	430a      	orrs	r2, r1
 8000b84:	601a      	str	r2, [r3, #0]
 8000b86:	4b23      	ldr	r3, [pc, #140]	; (8000c14 <EXTI_Init+0xe0>)
 8000b88:	689a      	ldr	r2, [r3, #8]
 8000b8a:	687b      	ldr	r3, [r7, #4]
 8000b8c:	681b      	ldr	r3, [r3, #0]
 8000b8e:	43db      	mvns	r3, r3
 8000b90:	4920      	ldr	r1, [pc, #128]	; (8000c14 <EXTI_Init+0xe0>)
 8000b92:	4013      	ands	r3, r2
 8000b94:	608b      	str	r3, [r1, #8]
 8000b96:	4b1f      	ldr	r3, [pc, #124]	; (8000c14 <EXTI_Init+0xe0>)
 8000b98:	68da      	ldr	r2, [r3, #12]
 8000b9a:	687b      	ldr	r3, [r7, #4]
 8000b9c:	681b      	ldr	r3, [r3, #0]
 8000b9e:	43db      	mvns	r3, r3
 8000ba0:	491c      	ldr	r1, [pc, #112]	; (8000c14 <EXTI_Init+0xe0>)
 8000ba2:	4013      	ands	r3, r2
 8000ba4:	60cb      	str	r3, [r1, #12]
 8000ba6:	687b      	ldr	r3, [r7, #4]
 8000ba8:	795b      	ldrb	r3, [r3, #5]
 8000baa:	2b10      	cmp	r3, #16
 8000bac:	d10e      	bne.n	8000bcc <EXTI_Init+0x98>
 8000bae:	4b19      	ldr	r3, [pc, #100]	; (8000c14 <EXTI_Init+0xe0>)
 8000bb0:	689a      	ldr	r2, [r3, #8]
 8000bb2:	687b      	ldr	r3, [r7, #4]
 8000bb4:	681b      	ldr	r3, [r3, #0]
 8000bb6:	4917      	ldr	r1, [pc, #92]	; (8000c14 <EXTI_Init+0xe0>)
 8000bb8:	4313      	orrs	r3, r2
 8000bba:	608b      	str	r3, [r1, #8]
 8000bbc:	4b15      	ldr	r3, [pc, #84]	; (8000c14 <EXTI_Init+0xe0>)
 8000bbe:	68da      	ldr	r2, [r3, #12]
 8000bc0:	687b      	ldr	r3, [r7, #4]
 8000bc2:	681b      	ldr	r3, [r3, #0]
 8000bc4:	4913      	ldr	r1, [pc, #76]	; (8000c14 <EXTI_Init+0xe0>)
 8000bc6:	4313      	orrs	r3, r2
 8000bc8:	60cb      	str	r3, [r1, #12]
 8000bca:	e01d      	b.n	8000c08 <EXTI_Init+0xd4>
 8000bcc:	4b11      	ldr	r3, [pc, #68]	; (8000c14 <EXTI_Init+0xe0>)
 8000bce:	60fb      	str	r3, [r7, #12]
 8000bd0:	687b      	ldr	r3, [r7, #4]
 8000bd2:	795b      	ldrb	r3, [r3, #5]
 8000bd4:	461a      	mov	r2, r3
 8000bd6:	68fb      	ldr	r3, [r7, #12]
 8000bd8:	4413      	add	r3, r2
 8000bda:	60fb      	str	r3, [r7, #12]
 8000bdc:	68fb      	ldr	r3, [r7, #12]
 8000bde:	6819      	ldr	r1, [r3, #0]
 8000be0:	687b      	ldr	r3, [r7, #4]
 8000be2:	681a      	ldr	r2, [r3, #0]
 8000be4:	68fb      	ldr	r3, [r7, #12]
 8000be6:	430a      	orrs	r2, r1
 8000be8:	601a      	str	r2, [r3, #0]
 8000bea:	e00d      	b.n	8000c08 <EXTI_Init+0xd4>
 8000bec:	687b      	ldr	r3, [r7, #4]
 8000bee:	791b      	ldrb	r3, [r3, #4]
 8000bf0:	461a      	mov	r2, r3
 8000bf2:	68fb      	ldr	r3, [r7, #12]
 8000bf4:	4413      	add	r3, r2
 8000bf6:	60fb      	str	r3, [r7, #12]
 8000bf8:	68fb      	ldr	r3, [r7, #12]
 8000bfa:	6819      	ldr	r1, [r3, #0]
 8000bfc:	687b      	ldr	r3, [r7, #4]
 8000bfe:	681b      	ldr	r3, [r3, #0]
 8000c00:	43da      	mvns	r2, r3
 8000c02:	68fb      	ldr	r3, [r7, #12]
 8000c04:	400a      	ands	r2, r1
 8000c06:	601a      	str	r2, [r3, #0]
 8000c08:	bf00      	nop
 8000c0a:	3714      	adds	r7, #20
 8000c0c:	46bd      	mov	sp, r7
 8000c0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c12:	4770      	bx	lr
 8000c14:	40013c00 	.word	0x40013c00

08000c18 <EXTI_GetFlagStatus>:
 8000c18:	b480      	push	{r7}
 8000c1a:	b085      	sub	sp, #20
 8000c1c:	af00      	add	r7, sp, #0
 8000c1e:	6078      	str	r0, [r7, #4]
 8000c20:	2300      	movs	r3, #0
 8000c22:	73fb      	strb	r3, [r7, #15]
 8000c24:	4b08      	ldr	r3, [pc, #32]	; (8000c48 <EXTI_GetFlagStatus+0x30>)
 8000c26:	695a      	ldr	r2, [r3, #20]
 8000c28:	687b      	ldr	r3, [r7, #4]
 8000c2a:	4013      	ands	r3, r2
 8000c2c:	2b00      	cmp	r3, #0
 8000c2e:	d002      	beq.n	8000c36 <EXTI_GetFlagStatus+0x1e>
 8000c30:	2301      	movs	r3, #1
 8000c32:	73fb      	strb	r3, [r7, #15]
 8000c34:	e001      	b.n	8000c3a <EXTI_GetFlagStatus+0x22>
 8000c36:	2300      	movs	r3, #0
 8000c38:	73fb      	strb	r3, [r7, #15]
 8000c3a:	7bfb      	ldrb	r3, [r7, #15]
 8000c3c:	4618      	mov	r0, r3
 8000c3e:	3714      	adds	r7, #20
 8000c40:	46bd      	mov	sp, r7
 8000c42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c46:	4770      	bx	lr
 8000c48:	40013c00 	.word	0x40013c00

08000c4c <EXTI_ClearITPendingBit>:
 8000c4c:	b480      	push	{r7}
 8000c4e:	b083      	sub	sp, #12
 8000c50:	af00      	add	r7, sp, #0
 8000c52:	6078      	str	r0, [r7, #4]
 8000c54:	4a04      	ldr	r2, [pc, #16]	; (8000c68 <EXTI_ClearITPendingBit+0x1c>)
 8000c56:	687b      	ldr	r3, [r7, #4]
 8000c58:	6153      	str	r3, [r2, #20]
 8000c5a:	bf00      	nop
 8000c5c:	370c      	adds	r7, #12
 8000c5e:	46bd      	mov	sp, r7
 8000c60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c64:	4770      	bx	lr
 8000c66:	bf00      	nop
 8000c68:	40013c00 	.word	0x40013c00

08000c6c <GPIO_Init>:
 8000c6c:	b480      	push	{r7}
 8000c6e:	b087      	sub	sp, #28
 8000c70:	af00      	add	r7, sp, #0
 8000c72:	6078      	str	r0, [r7, #4]
 8000c74:	6039      	str	r1, [r7, #0]
 8000c76:	2300      	movs	r3, #0
 8000c78:	617b      	str	r3, [r7, #20]
 8000c7a:	2300      	movs	r3, #0
 8000c7c:	613b      	str	r3, [r7, #16]
 8000c7e:	2300      	movs	r3, #0
 8000c80:	60fb      	str	r3, [r7, #12]
 8000c82:	2300      	movs	r3, #0
 8000c84:	617b      	str	r3, [r7, #20]
 8000c86:	e076      	b.n	8000d76 <GPIO_Init+0x10a>
 8000c88:	2201      	movs	r2, #1
 8000c8a:	697b      	ldr	r3, [r7, #20]
 8000c8c:	fa02 f303 	lsl.w	r3, r2, r3
 8000c90:	613b      	str	r3, [r7, #16]
 8000c92:	683b      	ldr	r3, [r7, #0]
 8000c94:	681b      	ldr	r3, [r3, #0]
 8000c96:	693a      	ldr	r2, [r7, #16]
 8000c98:	4013      	ands	r3, r2
 8000c9a:	60fb      	str	r3, [r7, #12]
 8000c9c:	68fa      	ldr	r2, [r7, #12]
 8000c9e:	693b      	ldr	r3, [r7, #16]
 8000ca0:	429a      	cmp	r2, r3
 8000ca2:	d165      	bne.n	8000d70 <GPIO_Init+0x104>
 8000ca4:	687b      	ldr	r3, [r7, #4]
 8000ca6:	681a      	ldr	r2, [r3, #0]
 8000ca8:	697b      	ldr	r3, [r7, #20]
 8000caa:	005b      	lsls	r3, r3, #1
 8000cac:	2103      	movs	r1, #3
 8000cae:	fa01 f303 	lsl.w	r3, r1, r3
 8000cb2:	43db      	mvns	r3, r3
 8000cb4:	401a      	ands	r2, r3
 8000cb6:	687b      	ldr	r3, [r7, #4]
 8000cb8:	601a      	str	r2, [r3, #0]
 8000cba:	687b      	ldr	r3, [r7, #4]
 8000cbc:	681a      	ldr	r2, [r3, #0]
 8000cbe:	683b      	ldr	r3, [r7, #0]
 8000cc0:	791b      	ldrb	r3, [r3, #4]
 8000cc2:	4619      	mov	r1, r3
 8000cc4:	697b      	ldr	r3, [r7, #20]
 8000cc6:	005b      	lsls	r3, r3, #1
 8000cc8:	fa01 f303 	lsl.w	r3, r1, r3
 8000ccc:	431a      	orrs	r2, r3
 8000cce:	687b      	ldr	r3, [r7, #4]
 8000cd0:	601a      	str	r2, [r3, #0]
 8000cd2:	683b      	ldr	r3, [r7, #0]
 8000cd4:	791b      	ldrb	r3, [r3, #4]
 8000cd6:	2b01      	cmp	r3, #1
 8000cd8:	d003      	beq.n	8000ce2 <GPIO_Init+0x76>
 8000cda:	683b      	ldr	r3, [r7, #0]
 8000cdc:	791b      	ldrb	r3, [r3, #4]
 8000cde:	2b02      	cmp	r3, #2
 8000ce0:	d12e      	bne.n	8000d40 <GPIO_Init+0xd4>
 8000ce2:	687b      	ldr	r3, [r7, #4]
 8000ce4:	689a      	ldr	r2, [r3, #8]
 8000ce6:	697b      	ldr	r3, [r7, #20]
 8000ce8:	005b      	lsls	r3, r3, #1
 8000cea:	2103      	movs	r1, #3
 8000cec:	fa01 f303 	lsl.w	r3, r1, r3
 8000cf0:	43db      	mvns	r3, r3
 8000cf2:	401a      	ands	r2, r3
 8000cf4:	687b      	ldr	r3, [r7, #4]
 8000cf6:	609a      	str	r2, [r3, #8]
 8000cf8:	687b      	ldr	r3, [r7, #4]
 8000cfa:	689a      	ldr	r2, [r3, #8]
 8000cfc:	683b      	ldr	r3, [r7, #0]
 8000cfe:	795b      	ldrb	r3, [r3, #5]
 8000d00:	4619      	mov	r1, r3
 8000d02:	697b      	ldr	r3, [r7, #20]
 8000d04:	005b      	lsls	r3, r3, #1
 8000d06:	fa01 f303 	lsl.w	r3, r1, r3
 8000d0a:	431a      	orrs	r2, r3
 8000d0c:	687b      	ldr	r3, [r7, #4]
 8000d0e:	609a      	str	r2, [r3, #8]
 8000d10:	687b      	ldr	r3, [r7, #4]
 8000d12:	685a      	ldr	r2, [r3, #4]
 8000d14:	697b      	ldr	r3, [r7, #20]
 8000d16:	b29b      	uxth	r3, r3
 8000d18:	4619      	mov	r1, r3
 8000d1a:	2301      	movs	r3, #1
 8000d1c:	408b      	lsls	r3, r1
 8000d1e:	43db      	mvns	r3, r3
 8000d20:	401a      	ands	r2, r3
 8000d22:	687b      	ldr	r3, [r7, #4]
 8000d24:	605a      	str	r2, [r3, #4]
 8000d26:	687b      	ldr	r3, [r7, #4]
 8000d28:	685b      	ldr	r3, [r3, #4]
 8000d2a:	683a      	ldr	r2, [r7, #0]
 8000d2c:	7992      	ldrb	r2, [r2, #6]
 8000d2e:	4611      	mov	r1, r2
 8000d30:	697a      	ldr	r2, [r7, #20]
 8000d32:	b292      	uxth	r2, r2
 8000d34:	fa01 f202 	lsl.w	r2, r1, r2
 8000d38:	b292      	uxth	r2, r2
 8000d3a:	431a      	orrs	r2, r3
 8000d3c:	687b      	ldr	r3, [r7, #4]
 8000d3e:	605a      	str	r2, [r3, #4]
 8000d40:	687b      	ldr	r3, [r7, #4]
 8000d42:	68da      	ldr	r2, [r3, #12]
 8000d44:	697b      	ldr	r3, [r7, #20]
 8000d46:	b29b      	uxth	r3, r3
 8000d48:	005b      	lsls	r3, r3, #1
 8000d4a:	2103      	movs	r1, #3
 8000d4c:	fa01 f303 	lsl.w	r3, r1, r3
 8000d50:	43db      	mvns	r3, r3
 8000d52:	401a      	ands	r2, r3
 8000d54:	687b      	ldr	r3, [r7, #4]
 8000d56:	60da      	str	r2, [r3, #12]
 8000d58:	687b      	ldr	r3, [r7, #4]
 8000d5a:	68da      	ldr	r2, [r3, #12]
 8000d5c:	683b      	ldr	r3, [r7, #0]
 8000d5e:	79db      	ldrb	r3, [r3, #7]
 8000d60:	4619      	mov	r1, r3
 8000d62:	697b      	ldr	r3, [r7, #20]
 8000d64:	005b      	lsls	r3, r3, #1
 8000d66:	fa01 f303 	lsl.w	r3, r1, r3
 8000d6a:	431a      	orrs	r2, r3
 8000d6c:	687b      	ldr	r3, [r7, #4]
 8000d6e:	60da      	str	r2, [r3, #12]
 8000d70:	697b      	ldr	r3, [r7, #20]
 8000d72:	3301      	adds	r3, #1
 8000d74:	617b      	str	r3, [r7, #20]
 8000d76:	697b      	ldr	r3, [r7, #20]
 8000d78:	2b0f      	cmp	r3, #15
 8000d7a:	d985      	bls.n	8000c88 <GPIO_Init+0x1c>
 8000d7c:	bf00      	nop
 8000d7e:	371c      	adds	r7, #28
 8000d80:	46bd      	mov	sp, r7
 8000d82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d86:	4770      	bx	lr

08000d88 <GPIO_ReadInputDataBit>:
 8000d88:	b480      	push	{r7}
 8000d8a:	b085      	sub	sp, #20
 8000d8c:	af00      	add	r7, sp, #0
 8000d8e:	6078      	str	r0, [r7, #4]
 8000d90:	460b      	mov	r3, r1
 8000d92:	807b      	strh	r3, [r7, #2]
 8000d94:	2300      	movs	r3, #0
 8000d96:	73fb      	strb	r3, [r7, #15]
 8000d98:	687b      	ldr	r3, [r7, #4]
 8000d9a:	691a      	ldr	r2, [r3, #16]
 8000d9c:	887b      	ldrh	r3, [r7, #2]
 8000d9e:	4013      	ands	r3, r2
 8000da0:	2b00      	cmp	r3, #0
 8000da2:	d002      	beq.n	8000daa <GPIO_ReadInputDataBit+0x22>
 8000da4:	2301      	movs	r3, #1
 8000da6:	73fb      	strb	r3, [r7, #15]
 8000da8:	e001      	b.n	8000dae <GPIO_ReadInputDataBit+0x26>
 8000daa:	2300      	movs	r3, #0
 8000dac:	73fb      	strb	r3, [r7, #15]
 8000dae:	7bfb      	ldrb	r3, [r7, #15]
 8000db0:	4618      	mov	r0, r3
 8000db2:	3714      	adds	r7, #20
 8000db4:	46bd      	mov	sp, r7
 8000db6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dba:	4770      	bx	lr

08000dbc <GPIO_SetBits>:
 8000dbc:	b480      	push	{r7}
 8000dbe:	b083      	sub	sp, #12
 8000dc0:	af00      	add	r7, sp, #0
 8000dc2:	6078      	str	r0, [r7, #4]
 8000dc4:	460b      	mov	r3, r1
 8000dc6:	807b      	strh	r3, [r7, #2]
 8000dc8:	687b      	ldr	r3, [r7, #4]
 8000dca:	887a      	ldrh	r2, [r7, #2]
 8000dcc:	831a      	strh	r2, [r3, #24]
 8000dce:	bf00      	nop
 8000dd0:	370c      	adds	r7, #12
 8000dd2:	46bd      	mov	sp, r7
 8000dd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dd8:	4770      	bx	lr

08000dda <GPIO_ResetBits>:
 8000dda:	b480      	push	{r7}
 8000ddc:	b083      	sub	sp, #12
 8000dde:	af00      	add	r7, sp, #0
 8000de0:	6078      	str	r0, [r7, #4]
 8000de2:	460b      	mov	r3, r1
 8000de4:	807b      	strh	r3, [r7, #2]
 8000de6:	687b      	ldr	r3, [r7, #4]
 8000de8:	887a      	ldrh	r2, [r7, #2]
 8000dea:	835a      	strh	r2, [r3, #26]
 8000dec:	bf00      	nop
 8000dee:	370c      	adds	r7, #12
 8000df0:	46bd      	mov	sp, r7
 8000df2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000df6:	4770      	bx	lr

08000df8 <RCC_GetClocksFreq>:
 8000df8:	b480      	push	{r7}
 8000dfa:	b089      	sub	sp, #36	; 0x24
 8000dfc:	af00      	add	r7, sp, #0
 8000dfe:	6078      	str	r0, [r7, #4]
 8000e00:	2300      	movs	r3, #0
 8000e02:	61bb      	str	r3, [r7, #24]
 8000e04:	2300      	movs	r3, #0
 8000e06:	617b      	str	r3, [r7, #20]
 8000e08:	2300      	movs	r3, #0
 8000e0a:	61fb      	str	r3, [r7, #28]
 8000e0c:	2302      	movs	r3, #2
 8000e0e:	613b      	str	r3, [r7, #16]
 8000e10:	2300      	movs	r3, #0
 8000e12:	60fb      	str	r3, [r7, #12]
 8000e14:	2302      	movs	r3, #2
 8000e16:	60bb      	str	r3, [r7, #8]
 8000e18:	4b47      	ldr	r3, [pc, #284]	; (8000f38 <RCC_GetClocksFreq+0x140>)
 8000e1a:	689b      	ldr	r3, [r3, #8]
 8000e1c:	f003 030c 	and.w	r3, r3, #12
 8000e20:	61bb      	str	r3, [r7, #24]
 8000e22:	69bb      	ldr	r3, [r7, #24]
 8000e24:	2b04      	cmp	r3, #4
 8000e26:	d007      	beq.n	8000e38 <RCC_GetClocksFreq+0x40>
 8000e28:	2b08      	cmp	r3, #8
 8000e2a:	d009      	beq.n	8000e40 <RCC_GetClocksFreq+0x48>
 8000e2c:	2b00      	cmp	r3, #0
 8000e2e:	d13d      	bne.n	8000eac <RCC_GetClocksFreq+0xb4>
 8000e30:	687b      	ldr	r3, [r7, #4]
 8000e32:	4a42      	ldr	r2, [pc, #264]	; (8000f3c <RCC_GetClocksFreq+0x144>)
 8000e34:	601a      	str	r2, [r3, #0]
 8000e36:	e03d      	b.n	8000eb4 <RCC_GetClocksFreq+0xbc>
 8000e38:	687b      	ldr	r3, [r7, #4]
 8000e3a:	4a41      	ldr	r2, [pc, #260]	; (8000f40 <RCC_GetClocksFreq+0x148>)
 8000e3c:	601a      	str	r2, [r3, #0]
 8000e3e:	e039      	b.n	8000eb4 <RCC_GetClocksFreq+0xbc>
 8000e40:	4b3d      	ldr	r3, [pc, #244]	; (8000f38 <RCC_GetClocksFreq+0x140>)
 8000e42:	685b      	ldr	r3, [r3, #4]
 8000e44:	0d9b      	lsrs	r3, r3, #22
 8000e46:	f003 0301 	and.w	r3, r3, #1
 8000e4a:	60fb      	str	r3, [r7, #12]
 8000e4c:	4b3a      	ldr	r3, [pc, #232]	; (8000f38 <RCC_GetClocksFreq+0x140>)
 8000e4e:	685b      	ldr	r3, [r3, #4]
 8000e50:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8000e54:	60bb      	str	r3, [r7, #8]
 8000e56:	68fb      	ldr	r3, [r7, #12]
 8000e58:	2b00      	cmp	r3, #0
 8000e5a:	d00c      	beq.n	8000e76 <RCC_GetClocksFreq+0x7e>
 8000e5c:	4a38      	ldr	r2, [pc, #224]	; (8000f40 <RCC_GetClocksFreq+0x148>)
 8000e5e:	68bb      	ldr	r3, [r7, #8]
 8000e60:	fbb2 f3f3 	udiv	r3, r2, r3
 8000e64:	4a34      	ldr	r2, [pc, #208]	; (8000f38 <RCC_GetClocksFreq+0x140>)
 8000e66:	6852      	ldr	r2, [r2, #4]
 8000e68:	0992      	lsrs	r2, r2, #6
 8000e6a:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000e6e:	fb02 f303 	mul.w	r3, r2, r3
 8000e72:	61fb      	str	r3, [r7, #28]
 8000e74:	e00b      	b.n	8000e8e <RCC_GetClocksFreq+0x96>
 8000e76:	4a31      	ldr	r2, [pc, #196]	; (8000f3c <RCC_GetClocksFreq+0x144>)
 8000e78:	68bb      	ldr	r3, [r7, #8]
 8000e7a:	fbb2 f3f3 	udiv	r3, r2, r3
 8000e7e:	4a2e      	ldr	r2, [pc, #184]	; (8000f38 <RCC_GetClocksFreq+0x140>)
 8000e80:	6852      	ldr	r2, [r2, #4]
 8000e82:	0992      	lsrs	r2, r2, #6
 8000e84:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000e88:	fb02 f303 	mul.w	r3, r2, r3
 8000e8c:	61fb      	str	r3, [r7, #28]
 8000e8e:	4b2a      	ldr	r3, [pc, #168]	; (8000f38 <RCC_GetClocksFreq+0x140>)
 8000e90:	685b      	ldr	r3, [r3, #4]
 8000e92:	0c1b      	lsrs	r3, r3, #16
 8000e94:	f003 0303 	and.w	r3, r3, #3
 8000e98:	3301      	adds	r3, #1
 8000e9a:	005b      	lsls	r3, r3, #1
 8000e9c:	613b      	str	r3, [r7, #16]
 8000e9e:	69fa      	ldr	r2, [r7, #28]
 8000ea0:	693b      	ldr	r3, [r7, #16]
 8000ea2:	fbb2 f2f3 	udiv	r2, r2, r3
 8000ea6:	687b      	ldr	r3, [r7, #4]
 8000ea8:	601a      	str	r2, [r3, #0]
 8000eaa:	e003      	b.n	8000eb4 <RCC_GetClocksFreq+0xbc>
 8000eac:	687b      	ldr	r3, [r7, #4]
 8000eae:	4a23      	ldr	r2, [pc, #140]	; (8000f3c <RCC_GetClocksFreq+0x144>)
 8000eb0:	601a      	str	r2, [r3, #0]
 8000eb2:	bf00      	nop
 8000eb4:	4b20      	ldr	r3, [pc, #128]	; (8000f38 <RCC_GetClocksFreq+0x140>)
 8000eb6:	689b      	ldr	r3, [r3, #8]
 8000eb8:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8000ebc:	61bb      	str	r3, [r7, #24]
 8000ebe:	69bb      	ldr	r3, [r7, #24]
 8000ec0:	091b      	lsrs	r3, r3, #4
 8000ec2:	61bb      	str	r3, [r7, #24]
 8000ec4:	4a1f      	ldr	r2, [pc, #124]	; (8000f44 <RCC_GetClocksFreq+0x14c>)
 8000ec6:	69bb      	ldr	r3, [r7, #24]
 8000ec8:	4413      	add	r3, r2
 8000eca:	781b      	ldrb	r3, [r3, #0]
 8000ecc:	b2db      	uxtb	r3, r3
 8000ece:	617b      	str	r3, [r7, #20]
 8000ed0:	687b      	ldr	r3, [r7, #4]
 8000ed2:	681a      	ldr	r2, [r3, #0]
 8000ed4:	697b      	ldr	r3, [r7, #20]
 8000ed6:	40da      	lsrs	r2, r3
 8000ed8:	687b      	ldr	r3, [r7, #4]
 8000eda:	605a      	str	r2, [r3, #4]
 8000edc:	4b16      	ldr	r3, [pc, #88]	; (8000f38 <RCC_GetClocksFreq+0x140>)
 8000ede:	689b      	ldr	r3, [r3, #8]
 8000ee0:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8000ee4:	61bb      	str	r3, [r7, #24]
 8000ee6:	69bb      	ldr	r3, [r7, #24]
 8000ee8:	0a9b      	lsrs	r3, r3, #10
 8000eea:	61bb      	str	r3, [r7, #24]
 8000eec:	4a15      	ldr	r2, [pc, #84]	; (8000f44 <RCC_GetClocksFreq+0x14c>)
 8000eee:	69bb      	ldr	r3, [r7, #24]
 8000ef0:	4413      	add	r3, r2
 8000ef2:	781b      	ldrb	r3, [r3, #0]
 8000ef4:	b2db      	uxtb	r3, r3
 8000ef6:	617b      	str	r3, [r7, #20]
 8000ef8:	687b      	ldr	r3, [r7, #4]
 8000efa:	685a      	ldr	r2, [r3, #4]
 8000efc:	697b      	ldr	r3, [r7, #20]
 8000efe:	40da      	lsrs	r2, r3
 8000f00:	687b      	ldr	r3, [r7, #4]
 8000f02:	609a      	str	r2, [r3, #8]
 8000f04:	4b0c      	ldr	r3, [pc, #48]	; (8000f38 <RCC_GetClocksFreq+0x140>)
 8000f06:	689b      	ldr	r3, [r3, #8]
 8000f08:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8000f0c:	61bb      	str	r3, [r7, #24]
 8000f0e:	69bb      	ldr	r3, [r7, #24]
 8000f10:	0b5b      	lsrs	r3, r3, #13
 8000f12:	61bb      	str	r3, [r7, #24]
 8000f14:	4a0b      	ldr	r2, [pc, #44]	; (8000f44 <RCC_GetClocksFreq+0x14c>)
 8000f16:	69bb      	ldr	r3, [r7, #24]
 8000f18:	4413      	add	r3, r2
 8000f1a:	781b      	ldrb	r3, [r3, #0]
 8000f1c:	b2db      	uxtb	r3, r3
 8000f1e:	617b      	str	r3, [r7, #20]
 8000f20:	687b      	ldr	r3, [r7, #4]
 8000f22:	685a      	ldr	r2, [r3, #4]
 8000f24:	697b      	ldr	r3, [r7, #20]
 8000f26:	40da      	lsrs	r2, r3
 8000f28:	687b      	ldr	r3, [r7, #4]
 8000f2a:	60da      	str	r2, [r3, #12]
 8000f2c:	bf00      	nop
 8000f2e:	3724      	adds	r7, #36	; 0x24
 8000f30:	46bd      	mov	sp, r7
 8000f32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f36:	4770      	bx	lr
 8000f38:	40023800 	.word	0x40023800
 8000f3c:	00f42400 	.word	0x00f42400
 8000f40:	017d7840 	.word	0x017d7840
 8000f44:	20000014 	.word	0x20000014

08000f48 <RCC_AHB1PeriphClockCmd>:
 8000f48:	b480      	push	{r7}
 8000f4a:	b083      	sub	sp, #12
 8000f4c:	af00      	add	r7, sp, #0
 8000f4e:	6078      	str	r0, [r7, #4]
 8000f50:	460b      	mov	r3, r1
 8000f52:	70fb      	strb	r3, [r7, #3]
 8000f54:	78fb      	ldrb	r3, [r7, #3]
 8000f56:	2b00      	cmp	r3, #0
 8000f58:	d006      	beq.n	8000f68 <RCC_AHB1PeriphClockCmd+0x20>
 8000f5a:	4b0a      	ldr	r3, [pc, #40]	; (8000f84 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000f5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000f5e:	4909      	ldr	r1, [pc, #36]	; (8000f84 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000f60:	687b      	ldr	r3, [r7, #4]
 8000f62:	4313      	orrs	r3, r2
 8000f64:	630b      	str	r3, [r1, #48]	; 0x30
 8000f66:	e006      	b.n	8000f76 <RCC_AHB1PeriphClockCmd+0x2e>
 8000f68:	4b06      	ldr	r3, [pc, #24]	; (8000f84 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000f6a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000f6c:	687b      	ldr	r3, [r7, #4]
 8000f6e:	43db      	mvns	r3, r3
 8000f70:	4904      	ldr	r1, [pc, #16]	; (8000f84 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000f72:	4013      	ands	r3, r2
 8000f74:	630b      	str	r3, [r1, #48]	; 0x30
 8000f76:	bf00      	nop
 8000f78:	370c      	adds	r7, #12
 8000f7a:	46bd      	mov	sp, r7
 8000f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f80:	4770      	bx	lr
 8000f82:	bf00      	nop
 8000f84:	40023800 	.word	0x40023800

08000f88 <RCC_APB2PeriphClockCmd>:
 8000f88:	b480      	push	{r7}
 8000f8a:	b083      	sub	sp, #12
 8000f8c:	af00      	add	r7, sp, #0
 8000f8e:	6078      	str	r0, [r7, #4]
 8000f90:	460b      	mov	r3, r1
 8000f92:	70fb      	strb	r3, [r7, #3]
 8000f94:	78fb      	ldrb	r3, [r7, #3]
 8000f96:	2b00      	cmp	r3, #0
 8000f98:	d006      	beq.n	8000fa8 <RCC_APB2PeriphClockCmd+0x20>
 8000f9a:	4b0a      	ldr	r3, [pc, #40]	; (8000fc4 <RCC_APB2PeriphClockCmd+0x3c>)
 8000f9c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000f9e:	4909      	ldr	r1, [pc, #36]	; (8000fc4 <RCC_APB2PeriphClockCmd+0x3c>)
 8000fa0:	687b      	ldr	r3, [r7, #4]
 8000fa2:	4313      	orrs	r3, r2
 8000fa4:	644b      	str	r3, [r1, #68]	; 0x44
 8000fa6:	e006      	b.n	8000fb6 <RCC_APB2PeriphClockCmd+0x2e>
 8000fa8:	4b06      	ldr	r3, [pc, #24]	; (8000fc4 <RCC_APB2PeriphClockCmd+0x3c>)
 8000faa:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000fac:	687b      	ldr	r3, [r7, #4]
 8000fae:	43db      	mvns	r3, r3
 8000fb0:	4904      	ldr	r1, [pc, #16]	; (8000fc4 <RCC_APB2PeriphClockCmd+0x3c>)
 8000fb2:	4013      	ands	r3, r2
 8000fb4:	644b      	str	r3, [r1, #68]	; 0x44
 8000fb6:	bf00      	nop
 8000fb8:	370c      	adds	r7, #12
 8000fba:	46bd      	mov	sp, r7
 8000fbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fc0:	4770      	bx	lr
 8000fc2:	bf00      	nop
 8000fc4:	40023800 	.word	0x40023800

08000fc8 <SYSCFG_EXTILineConfig>:
 8000fc8:	b480      	push	{r7}
 8000fca:	b085      	sub	sp, #20
 8000fcc:	af00      	add	r7, sp, #0
 8000fce:	4603      	mov	r3, r0
 8000fd0:	460a      	mov	r2, r1
 8000fd2:	71fb      	strb	r3, [r7, #7]
 8000fd4:	4613      	mov	r3, r2
 8000fd6:	71bb      	strb	r3, [r7, #6]
 8000fd8:	2300      	movs	r3, #0
 8000fda:	60fb      	str	r3, [r7, #12]
 8000fdc:	79bb      	ldrb	r3, [r7, #6]
 8000fde:	f003 0303 	and.w	r3, r3, #3
 8000fe2:	009b      	lsls	r3, r3, #2
 8000fe4:	220f      	movs	r2, #15
 8000fe6:	fa02 f303 	lsl.w	r3, r2, r3
 8000fea:	60fb      	str	r3, [r7, #12]
 8000fec:	4a16      	ldr	r2, [pc, #88]	; (8001048 <SYSCFG_EXTILineConfig+0x80>)
 8000fee:	79bb      	ldrb	r3, [r7, #6]
 8000ff0:	089b      	lsrs	r3, r3, #2
 8000ff2:	b2db      	uxtb	r3, r3
 8000ff4:	3302      	adds	r3, #2
 8000ff6:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000ffa:	68fb      	ldr	r3, [r7, #12]
 8000ffc:	43db      	mvns	r3, r3
 8000ffe:	4812      	ldr	r0, [pc, #72]	; (8001048 <SYSCFG_EXTILineConfig+0x80>)
 8001000:	79b9      	ldrb	r1, [r7, #6]
 8001002:	0889      	lsrs	r1, r1, #2
 8001004:	b2c9      	uxtb	r1, r1
 8001006:	401a      	ands	r2, r3
 8001008:	1c8b      	adds	r3, r1, #2
 800100a:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 800100e:	4a0e      	ldr	r2, [pc, #56]	; (8001048 <SYSCFG_EXTILineConfig+0x80>)
 8001010:	79bb      	ldrb	r3, [r7, #6]
 8001012:	089b      	lsrs	r3, r3, #2
 8001014:	b2db      	uxtb	r3, r3
 8001016:	3302      	adds	r3, #2
 8001018:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800101c:	79f9      	ldrb	r1, [r7, #7]
 800101e:	79bb      	ldrb	r3, [r7, #6]
 8001020:	f003 0303 	and.w	r3, r3, #3
 8001024:	009b      	lsls	r3, r3, #2
 8001026:	fa01 f303 	lsl.w	r3, r1, r3
 800102a:	4807      	ldr	r0, [pc, #28]	; (8001048 <SYSCFG_EXTILineConfig+0x80>)
 800102c:	79b9      	ldrb	r1, [r7, #6]
 800102e:	0889      	lsrs	r1, r1, #2
 8001030:	b2c9      	uxtb	r1, r1
 8001032:	431a      	orrs	r2, r3
 8001034:	1c8b      	adds	r3, r1, #2
 8001036:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 800103a:	bf00      	nop
 800103c:	3714      	adds	r7, #20
 800103e:	46bd      	mov	sp, r7
 8001040:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001044:	4770      	bx	lr
 8001046:	bf00      	nop
 8001048:	40013800 	.word	0x40013800

0800104c <NVIC_SetPriority>:
 800104c:	b480      	push	{r7}
 800104e:	b083      	sub	sp, #12
 8001050:	af00      	add	r7, sp, #0
 8001052:	4603      	mov	r3, r0
 8001054:	6039      	str	r1, [r7, #0]
 8001056:	71fb      	strb	r3, [r7, #7]
 8001058:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800105c:	2b00      	cmp	r3, #0
 800105e:	da0b      	bge.n	8001078 <NVIC_SetPriority+0x2c>
 8001060:	683b      	ldr	r3, [r7, #0]
 8001062:	b2da      	uxtb	r2, r3
 8001064:	490c      	ldr	r1, [pc, #48]	; (8001098 <NVIC_SetPriority+0x4c>)
 8001066:	79fb      	ldrb	r3, [r7, #7]
 8001068:	f003 030f 	and.w	r3, r3, #15
 800106c:	3b04      	subs	r3, #4
 800106e:	0112      	lsls	r2, r2, #4
 8001070:	b2d2      	uxtb	r2, r2
 8001072:	440b      	add	r3, r1
 8001074:	761a      	strb	r2, [r3, #24]
 8001076:	e009      	b.n	800108c <NVIC_SetPriority+0x40>
 8001078:	683b      	ldr	r3, [r7, #0]
 800107a:	b2da      	uxtb	r2, r3
 800107c:	4907      	ldr	r1, [pc, #28]	; (800109c <NVIC_SetPriority+0x50>)
 800107e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001082:	0112      	lsls	r2, r2, #4
 8001084:	b2d2      	uxtb	r2, r2
 8001086:	440b      	add	r3, r1
 8001088:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800108c:	bf00      	nop
 800108e:	370c      	adds	r7, #12
 8001090:	46bd      	mov	sp, r7
 8001092:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001096:	4770      	bx	lr
 8001098:	e000ed00 	.word	0xe000ed00
 800109c:	e000e100 	.word	0xe000e100

080010a0 <SysTick_Config>:
 80010a0:	b580      	push	{r7, lr}
 80010a2:	b082      	sub	sp, #8
 80010a4:	af00      	add	r7, sp, #0
 80010a6:	6078      	str	r0, [r7, #4]
 80010a8:	687b      	ldr	r3, [r7, #4]
 80010aa:	3b01      	subs	r3, #1
 80010ac:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80010b0:	d301      	bcc.n	80010b6 <SysTick_Config+0x16>
 80010b2:	2301      	movs	r3, #1
 80010b4:	e00f      	b.n	80010d6 <SysTick_Config+0x36>
 80010b6:	4a0a      	ldr	r2, [pc, #40]	; (80010e0 <SysTick_Config+0x40>)
 80010b8:	687b      	ldr	r3, [r7, #4]
 80010ba:	3b01      	subs	r3, #1
 80010bc:	6053      	str	r3, [r2, #4]
 80010be:	210f      	movs	r1, #15
 80010c0:	f04f 30ff 	mov.w	r0, #4294967295
 80010c4:	f7ff ffc2 	bl	800104c <NVIC_SetPriority>
 80010c8:	4b05      	ldr	r3, [pc, #20]	; (80010e0 <SysTick_Config+0x40>)
 80010ca:	2200      	movs	r2, #0
 80010cc:	609a      	str	r2, [r3, #8]
 80010ce:	4b04      	ldr	r3, [pc, #16]	; (80010e0 <SysTick_Config+0x40>)
 80010d0:	2207      	movs	r2, #7
 80010d2:	601a      	str	r2, [r3, #0]
 80010d4:	2300      	movs	r3, #0
 80010d6:	4618      	mov	r0, r3
 80010d8:	3708      	adds	r7, #8
 80010da:	46bd      	mov	sp, r7
 80010dc:	bd80      	pop	{r7, pc}
 80010de:	bf00      	nop
 80010e0:	e000e010 	.word	0xe000e010

080010e4 <TimerInit>:
 80010e4:	b580      	push	{r7, lr}
 80010e6:	b084      	sub	sp, #16
 80010e8:	af00      	add	r7, sp, #0
 80010ea:	463b      	mov	r3, r7
 80010ec:	4618      	mov	r0, r3
 80010ee:	f7ff fe83 	bl	8000df8 <RCC_GetClocksFreq>
 80010f2:	683b      	ldr	r3, [r7, #0]
 80010f4:	4a0a      	ldr	r2, [pc, #40]	; (8001120 <TimerInit+0x3c>)
 80010f6:	fba2 2303 	umull	r2, r3, r2, r3
 80010fa:	099b      	lsrs	r3, r3, #6
 80010fc:	4618      	mov	r0, r3
 80010fe:	f7ff ffcf 	bl	80010a0 <SysTick_Config>
 8001102:	2101      	movs	r1, #1
 8001104:	f04f 30ff 	mov.w	r0, #4294967295
 8001108:	f7ff ffa0 	bl	800104c <NVIC_SetPriority>
 800110c:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8001110:	2100      	movs	r1, #0
 8001112:	4804      	ldr	r0, [pc, #16]	; (8001124 <TimerInit+0x40>)
 8001114:	f000 f822 	bl	800115c <memsetl>
 8001118:	bf00      	nop
 800111a:	3710      	adds	r7, #16
 800111c:	46bd      	mov	sp, r7
 800111e:	bd80      	pop	{r7, pc}
 8001120:	10624dd3 	.word	0x10624dd3
 8001124:	20000068 	.word	0x20000068

08001128 <GetMilSecTick>:
 8001128:	b480      	push	{r7}
 800112a:	af00      	add	r7, sp, #0
 800112c:	4b03      	ldr	r3, [pc, #12]	; (800113c <GetMilSecTick+0x14>)
 800112e:	681b      	ldr	r3, [r3, #0]
 8001130:	4618      	mov	r0, r3
 8001132:	46bd      	mov	sp, r7
 8001134:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001138:	4770      	bx	lr
 800113a:	bf00      	nop
 800113c:	200001e8 	.word	0x200001e8

08001140 <SysTick_Handler>:
 8001140:	b480      	push	{r7}
 8001142:	af00      	add	r7, sp, #0
 8001144:	4b04      	ldr	r3, [pc, #16]	; (8001158 <SysTick_Handler+0x18>)
 8001146:	681b      	ldr	r3, [r3, #0]
 8001148:	3301      	adds	r3, #1
 800114a:	4a03      	ldr	r2, [pc, #12]	; (8001158 <SysTick_Handler+0x18>)
 800114c:	6013      	str	r3, [r2, #0]
 800114e:	bf00      	nop
 8001150:	46bd      	mov	sp, r7
 8001152:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001156:	4770      	bx	lr
 8001158:	200001e8 	.word	0x200001e8

0800115c <memsetl>:
 800115c:	b480      	push	{r7}
 800115e:	b083      	sub	sp, #12
 8001160:	af00      	add	r7, sp, #0
 8001162:	6078      	str	r0, [r7, #4]
 8001164:	460b      	mov	r3, r1
 8001166:	70fb      	strb	r3, [r7, #3]
 8001168:	4613      	mov	r3, r2
 800116a:	803b      	strh	r3, [r7, #0]
 800116c:	e004      	b.n	8001178 <memsetl+0x1c>
 800116e:	687b      	ldr	r3, [r7, #4]
 8001170:	1c5a      	adds	r2, r3, #1
 8001172:	607a      	str	r2, [r7, #4]
 8001174:	78fa      	ldrb	r2, [r7, #3]
 8001176:	701a      	strb	r2, [r3, #0]
 8001178:	883b      	ldrh	r3, [r7, #0]
 800117a:	1e5a      	subs	r2, r3, #1
 800117c:	803a      	strh	r2, [r7, #0]
 800117e:	2b00      	cmp	r3, #0
 8001180:	d1f5      	bne.n	800116e <memsetl+0x12>
 8001182:	bf00      	nop
 8001184:	370c      	adds	r7, #12
 8001186:	46bd      	mov	sp, r7
 8001188:	f85d 7b04 	ldr.w	r7, [sp], #4
 800118c:	4770      	bx	lr
	...

08001190 <__libc_init_array>:
 8001190:	b570      	push	{r4, r5, r6, lr}
 8001192:	4d0d      	ldr	r5, [pc, #52]	; (80011c8 <__libc_init_array+0x38>)
 8001194:	4c0d      	ldr	r4, [pc, #52]	; (80011cc <__libc_init_array+0x3c>)
 8001196:	1b64      	subs	r4, r4, r5
 8001198:	10a4      	asrs	r4, r4, #2
 800119a:	2600      	movs	r6, #0
 800119c:	42a6      	cmp	r6, r4
 800119e:	d109      	bne.n	80011b4 <__libc_init_array+0x24>
 80011a0:	4d0b      	ldr	r5, [pc, #44]	; (80011d0 <__libc_init_array+0x40>)
 80011a2:	4c0c      	ldr	r4, [pc, #48]	; (80011d4 <__libc_init_array+0x44>)
 80011a4:	f000 f818 	bl	80011d8 <_init>
 80011a8:	1b64      	subs	r4, r4, r5
 80011aa:	10a4      	asrs	r4, r4, #2
 80011ac:	2600      	movs	r6, #0
 80011ae:	42a6      	cmp	r6, r4
 80011b0:	d105      	bne.n	80011be <__libc_init_array+0x2e>
 80011b2:	bd70      	pop	{r4, r5, r6, pc}
 80011b4:	f855 3b04 	ldr.w	r3, [r5], #4
 80011b8:	4798      	blx	r3
 80011ba:	3601      	adds	r6, #1
 80011bc:	e7ee      	b.n	800119c <__libc_init_array+0xc>
 80011be:	f855 3b04 	ldr.w	r3, [r5], #4
 80011c2:	4798      	blx	r3
 80011c4:	3601      	adds	r6, #1
 80011c6:	e7f2      	b.n	80011ae <__libc_init_array+0x1e>
 80011c8:	080011f0 	.word	0x080011f0
 80011cc:	080011f0 	.word	0x080011f0
 80011d0:	080011f0 	.word	0x080011f0
 80011d4:	080011f4 	.word	0x080011f4

080011d8 <_init>:
 80011d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011da:	bf00      	nop
 80011dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80011de:	bc08      	pop	{r3}
 80011e0:	469e      	mov	lr, r3
 80011e2:	4770      	bx	lr

080011e4 <_fini>:
 80011e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011e6:	bf00      	nop
 80011e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80011ea:	bc08      	pop	{r3}
 80011ec:	469e      	mov	lr, r3
 80011ee:	4770      	bx	lr
